{"version":3,"sources":["static/icons sync /^/.*/.svg$","static/icons/01d.svg","static/icons/01n.svg","static/icons/02d.svg","static/icons/02n.svg","static/icons/03d.svg","static/icons/03n.svg","static/icons/04d.svg","static/icons/04n.svg","static/icons/09d.svg","static/icons/10d.svg","static/icons/10n.svg","static/icons/11d.svg","static/icons/13d.svg","static/icons/50d.svg","static/icons/50n.svg","static/icons/cold.svg","static/icons/compass.svg","static/icons/hot.svg","static/icons/storm.svg","static/icons/temperature.svg","static/icons/warm.svg","models/CityWeatherStore/index.js","static/index.js","services/LocalStorage/index.js","models/CountryCitiesStore/index.js","utils/index.js","models/SupportedCountriesStore/index.js","models/GeoDataStore/index.js","services/WeatherService/api.js","services/GeocodeService/api.js","models/index.js","hooks/useIcons.js","containers/LocalizationWeather/index.js","components/Search/index.js","components/SelectCountry/index.js","components/GoToCurrentCountry/index.js","components/Clock/index.js","views/MainView/LocalizationWidget.js","views/MainView/index.js","views/CountryView/City.js","views/CountryView/index.js","hooks/useLazyLoad.js","views/CityView/index.js","views/NotFoundView/index.js","hooks/usePreLoad.js","hooks/usePrevious.js","containers/MainContainer/index.js","routers/MainRouter/index.js","App.js","reportWebVitals.js","index.js","static/icons/humidity.svg","static/icons/windy.svg","static/icons/pollution.svg","static/icons/pin.svg","static/icons/pressure.svg"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CityWeatherStore","geoData","cities","api","weatherData","isLoaded","this","makeObservable","observable","fetchWeatherData","action","bound","setWeatherData","a","city","state","country","getDataForCity","status","data","runInAction","isSuccess","cityWithWeather","setWeather","setLoadedCity","cityId","cityData","findCity","setCurrentCityId","fetchGeoData","localization","getCitiesForState","HOUR","LocalStorage","store","window","localStorage","entries","forEach","key","value","setItem","JSON","stringify","parse","getItem","CountryCitiesStore","isFetching","currentCity","currentCountry","filter","offset","limit","fetchCitiesForCountry","setFilter","setCurrentCity","filtered","computed","sorted","loaded","initStorage","sort","b","lowerCaseFilter","toLowerCase","item","includes","indexOf","loadedCities","push","String","Array","isArray","loadedCity","find","index","isFound","loadedCityIndex","undefined","setCities","setCitiesWeatherToStorage","fetched","getStore","fullyFetchedQuantity","timestamp","now","Date","timeIsUp","to","citiesToFetch","slice","length","shouldFetch","getWeatherForCities","getCitiesFromStorage","citiesWeather","saveStore","cityName","name","cityState","reLoad","handleTimeUp","citiesFromStorage","getFromStorage","getCities","setCurrentCountry","saveToStorage","override","isAll","updatedCities","foundIndex","handleAsync","promise","defaultValue","handleError","Promise","then","catch","error","console","isFunction","SupportedCountriesStore","countries","fetchCountries","countires","countryName","collection","getFilteredMatches","countriesFromStorage","getSupportedCountries","setCountries","GeoDataStore","geocodeService","lat","lon","coordinates","locality","region","setCoordinates","getDeviceCoordinates","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","reload","getGeoData","setLocality","setCountry","setRegion","setIsLoaded","headers","Accept","baseUrl","requestsQuantity","_resetRequestsQuantity","axios","get","params","_getKey","incrementRequestsQuantity","response","getSupportedStatesForCountry","states","all","WeatherApi","mapCities","flatCities","citiesData","mapResponse","interval","setInterval","test","callback","timeout","setTimeout","flat","defaultGeodata","freeze","config","access_key","query","geodata","supportedCountriesStore","weatherApi","geoDataStore","geocodeApi","countryCitiesStore","cityWeatherStore","cityWeather","storeContext","React","createContext","StoreProvider","children","Provider","useIcons","weatherIconCode","temperature","useMemo","weather","loadIconPath","getTemperatureIconCode","humidity","wind","pollution","pin","pressure","iconName","require","default","useStyles","makeStyles","wrapper","display","justifyContent","alignItems","minHeight","padding","margin","observer","useContext","classes","current","icons","ic","tp","Paper","className","CircularProgress","_filterBuilder","timeoutId","input","clearTimeout","renderInput","history","useHistory","useState","setInput","shouldDisplay","setShouldFilter","setCountryFilter","useCallback","setCitiesFilter","useEffect","Box","noValidate","autoComplete","handleInputChange","target","goToCountryView","toTopInMount","goToCityView","formControl","width","maxWidth","FormControl","InputLabel","Select","labelId","onChange","MenuItem","pathname","Clock","time","setTime","intervalIdRef","useRef","handleTick","clearInterval","prefix","matchZeroPrefix","matchIf","Number","currentTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","Typography","variant","localizationIcon","top","right","dataWrapper","flexDirection","rowWrapper","wrap","icon","height","paddingRight","weatherIcon","weatherIconWrapper","LocalizationWidget","classess","align","paragraph","Grid","container","justify","spacing","alt","src","color","hu","pr","ws","aqius","search","list","transform","overflowY","maxHeight","backgroundColor","zIndex","listItem","cursor","MainView","TextField","label","placeholder","renderCountries","List","ListItem","selected","onClick","renderCities","direction","Search","Divider","props","fab","bottom","card","backgroundSize","backgroundPosition","backgroundRepeat","City","setRef","isLast","Card","ref","CardMedia","image","button","left","useParams","location","useLocation","shouldFetchCities","load","deps","intersectionObserverRef","lastLoadedItemRef","disconnect","IntersectionObserver","isIntersecting","observe","node","useLazyLoad","loadCitiesWeather","bind","loadCities","scrollToTop","scrollTo","behavior","IconButton","HomeSharp","fontSize","array","Fab","weatherWrapper","back","temperatureIcon","mapContainer","secondWrapper","temp","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","iconAnchor","Marker","prototype","options","didMount","setDidMount","searchString","replace","split","reduce","searchParamsObject","param","loadCityWeather","loadData","goBack","ArrowBackSharp","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Popup","NotFoundView","usePreLoad","prevCoordinates","usePrevious","fetchLocalWeatherData","MainRouter","path","exact","component","CountryView","CityView","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6GAAA,IAAIA,EAAM,CACT,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,aAAc,IACd,gBAAiB,IACjB,YAAa,IACb,iBAAkB,GAClB,YAAa,GACb,kBAAmB,GACnB,iBAAkB,GAClB,cAAe,IACf,oBAAqB,IACrB,aAAc,IACd,cAAe,IAIhB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,iCC/CpB,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,qC,iCCAzC,OAAe,cAA0B,iC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,yC,iCCAzC,OAAe,cAA0B,kC,oKCQpBY,E,WAOnB,cAAuC,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,IAAO,yBANtCC,YAAc,GAMwB,KALtCC,UAAW,EAMTC,KAAKH,IAAMA,EACXG,KAAKL,QAAUA,EACfK,KAAKJ,OAASA,EACdK,YAAeD,KAAM,CACnBF,YAAaI,IACbH,SAAUG,IACVC,iBAAkBC,IAAOC,MACzBC,eAAgBF,IAAOC,Q,8CAI3B,SAAWP,GACT,OAAQE,KAAKF,YAAcA,I,qEAG7B,kDAAAS,EAAA,6DAAyBC,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,MAAOC,EAAtC,EAAsCA,QAAS5B,EAA/C,EAA+CA,GAC7CkB,KAAKD,UAAW,EADlB,mBAGWC,KAAKH,WAHhB,aAGW,EAAUc,eAAeH,EAAMC,EAAOC,GAHjD,gDAG8D,GAH9D,cAEUE,EAFV,EAEUA,OAAQC,EAFlB,EAEkBA,KAEhBC,aAAY,WAAO,IAAD,EAChB,aAAI,EAAKjB,WAAT,aAAI,EAAUkB,UAAUH,GAAS,CAAC,IAAD,EACzBI,EAAe,2BAAQH,GAAR,IAAc/B,KAAIiB,UAAU,IACjD,EAAKkB,WAAWD,GAChB,YAAKpB,cAAL,SAAasB,cAAcF,EAAiBN,GAC5C,EAAKX,UAAW,EAElB,EAAKA,UAAW,KAXpB,iD,mFAeA,SAAeoB,GAAS,IAAD,SACfC,EAAQ,UAAGpB,KAAKJ,cAAR,aAAG,EAAayB,SAASF,GAC/BpB,EAAuCqB,EAAvCrB,SAAUS,EAA6BY,EAA7BZ,KAAMC,EAAuBW,EAAvBX,MAAOC,EAAgBU,EAAhBV,QAAS5B,EAAOsC,EAAPtC,GACpCiB,EACFe,aAAY,WAAO,IAAD,EAChB,EAAKG,WAAWG,GAChB,YAAKxB,cAAL,SAAa0B,iBAAiBxC,MAIlCkB,KAAKG,iBAAiB,CAAEK,OAAMC,QAAOC,UAAS5B,S,0EAGhD,WAA4BA,GAA5B,iCAAAyB,EAAA,+DACGP,KAAKL,QAAQI,UADhB,qCACmCC,KAAKL,QAAQ4B,eADhD,YAEiCvB,KAAKL,QAAQ6B,aAAtCd,EAFR,EAEQA,QAASD,EAFjB,EAEiBA,MAAOD,EAFxB,EAEwBA,KAFxB,2CAKaR,KAAKH,WALlB,aAKa,EAAU4B,kBAAkBf,EAASD,GALlD,iDAK6D,GAL7D,eAIYG,EAJZ,EAIYA,OAAQC,EAJpB,EAIoBA,KAEhBL,GAAO,UAAAR,KAAKH,WAAL,eAAUkB,UAAUH,IAApB,UAA8BC,EAAK,UAAnC,aAA8B,EAASL,KAAOA,EANzD,QAQEA,GAAQR,KAAKG,iBAAiB,CAAEK,OAAME,UAASD,QAAO3B,OARxD,iD,sFC1CW4C,EAAO,K,QCjBCC,E,8FACnB,SAAiBC,GAAQ,IAAD,GAChB,QAAN,EAAAC,cAAA,eAAQC,eACNxC,OAAOyC,QAAQH,GAAOI,SAAQ,mCAAEC,EAAF,KAAOC,EAAP,YAC5BL,OAAOC,aAAaK,QAAQF,EAAKG,KAAKC,UAAUH,S,sBAItD,SAAgBD,GAAM,IAAD,EACnB,OAAa,QAAN,EAAAJ,cAAA,eAAQC,eAAgBM,KAAKE,MAAMT,OAAOC,aAAaS,QAAQN,Q,KCGrDO,E,WAWnB,WAAY3C,GAAM,yBAVlBa,QAAU,GAUO,KATjBd,OAAS,GASQ,KARjBG,UAAW,EAQM,KAPjB0C,YAAa,EAOI,KANjBC,YAAc,KAMG,KALjBC,eAAiB,KAKA,KAJjBC,OAAS,GAIQ,KAFjBC,OAAS,EAEQ,KADjBC,MAAQ,EAEN9C,KAAKH,IAAMA,EACXI,YAAeD,KAAM,CACnBU,QAASR,IACTH,SAAUG,IACVuC,WAAYvC,IACZN,OAAQM,IACR0C,OAAQ1C,IACRwC,YAAaxC,IACbyC,eAAgBzC,IAChB6C,sBAAuB3C,IAAOC,MAC9B2C,UAAW5C,IAAOC,MAClBa,cAAed,IAAOC,MACtB4C,eAAgB7C,IAAOC,MACvB6C,SAAUC,IACVC,OAAQD,IACRE,OAAQF,MAEVnD,KAAKsD,c,wCAGP,WACE,OAAO,YAAItD,KAAKJ,QAAQ2D,MAAK,SAAChD,EAAGiD,GAAJ,OAAY,OAADjD,QAAC,IAADA,OAAA,EAAAA,EAAGC,OAAH,OAAUgD,QAAV,IAAUA,OAAV,EAAUA,EAAGhD,OAAQ,EAAI,O,oBAGnE,WAAgB,IAAD,EACPiD,EAAe,UAAGzD,KAAK4C,cAAR,aAAG,EAAac,cACrC,OAAO1D,KAAKJ,OACTgD,QAAO,SAACe,GAAD,sBAAUA,QAAV,IAAUA,GAAV,UAAUA,EAAMnD,YAAhB,iBAAU,EAAYkD,qBAAtB,aAAU,EAA2BE,SAASH,MACrDF,MACC,SAAChD,EAAGiD,GAAJ,mBACG,OAADjD,QAAC,IAADA,GAAA,UAAAA,EAAGC,YAAH,mBAASkD,qBAAT,eAAwBG,QAAQJ,KAAhC,OACAD,QADA,IACAA,GADA,UACAA,EAAGhD,YADH,iBACA,EAASkD,qBADT,aACA,EAAwBG,QAAQJ,S,kBAIxC,WACE,IADW,EACLK,EAAe,GADV,cAEQ9D,KAAKJ,QAFb,IAEX,2BAAgC,CAAC,IAAtBY,EAAqB,QAC9B,IAAKA,EAAKT,SACR,OAAO+D,EAETA,EAAaC,KAAKvD,IANT,8BAQX,OAAOsD,I,uBAGT,SAAUlB,GACR,OAAQ5C,KAAK4C,OAASoB,OAAOpB,K,uBAG/B,SAAUhD,GACR,OAAQI,KAAKJ,OAASqE,MAAMC,QAAQtE,GAAUA,EAAS,CAACA,K,4BAG1D,SAAeY,GACb,OAAQR,KAAK0C,YAAclC,I,+BAG7B,SAAkBE,GAChB,OAAQV,KAAK2C,eAAiBjC,I,oEAGhC,WAAsBS,GAAtB,4CAAAZ,EAAA,yDAEQ4D,EACJnE,KAAKJ,OAAOwE,MAAK,SAAC5D,EAAM6D,GACtB,IAAMC,EAAU9D,EAAK1B,KAAOqC,EAI5B,OAHImD,IACFC,EAAkBF,GAEbC,MACH,QAEgBE,IAApBD,EAXN,oDAeUxE,EAAmCoE,EAAnCpE,SAAUS,EAAyB2D,EAAzB3D,KAAMC,EAAmB0D,EAAnB1D,MAAOC,EAAYyD,EAAZzD,SAE3BX,EAjBN,uBAkBIe,aAAY,WACV,EAAKmC,eAAekB,GACpB,EAAKpE,UAAW,KApBtB,oDAyBiCC,KAAKH,WAzBtC,aAyBiC,EAAUc,eACvCH,EACAC,EACAC,GA5BJ,gBAyBUE,EAzBV,EAyBUA,OAAQC,EAzBlB,EAyBkBA,MAMhB,UAAIb,KAAKH,WAAT,aAAI,EAAUkB,UAAUH,OAChBhB,EADyB,YACZI,KAAKJ,SACjB2E,GAAP,2BAA+B1D,GAA/B,IAAqC/B,GAAIqC,EAAQpB,UAAU,IAC3De,aAAY,WACV,EAAK2D,UAAU7E,GACf,EAAKqD,eAAe,EAAKrD,OAAO2E,IAChC,EAAKxE,UAAW,KAElBC,KAAK0E,0BAA0B1E,KAAKJ,OAAQc,GAAS,IAvCzD,iD,6HA2CA,uEAAAH,EAAA,yDAAwBG,EAAxB,+BAAkCV,KAAK2C,eAC/BgC,EAAUhD,EAAaiD,SAAS,WADxC,EAE8CD,EAAQjE,IAAY,GAAxDmE,EAFV,EAEUA,qBAAsBC,EAFhC,EAEgCA,UAExBC,EAAMC,KAAKD,OAEXE,EAAWF,EAAMD,EAAY,EAAIpD,KAGrC1B,KAAK6C,OAAS,GAGVqC,EAAKlF,KAAK6C,OAAS7C,KAAK8C,MAZhC,QAcQqC,EAAgBnF,KAAKJ,OAAOwF,MAAMpF,KAAK6C,OAAQqC,UAdvD,IAgBOC,OAhBP,EAgBOA,EAAeE,OAhBtB,sDAoBEvE,aAAY,WACV,EAAK2B,YAAa,OAGd6C,GAAc,OAACT,QAAD,IAACA,IAAwB,GAAKK,GAAMD,GAxB1D,4CA2BYjF,KAAKH,WA3BjB,aA2BY,EAAU0F,oBAAoBJ,GA3B1C,iDA4BMnF,KAAKwF,qBAAqB9E,GA5BhC,QA0BQ+E,EA1BR,KA8BQ7F,EA9BR,YA8BqBI,KAAKJ,QAEX,OAAb6F,QAAa,IAAbA,KAAezD,SAAQ,SAACxB,GAClBZ,EAAOY,EAAK1B,MACdc,EAAOY,EAAK1B,IAAM0B,MAIlB8E,IACF3D,EAAa+D,UAAU,CACrBf,QAAQ,2BACHA,GADE,kBAEJjE,EAAU,CACToE,WAAYA,GAAaG,EAAWF,EAAMD,EAC1CD,qBAAsBK,OAI5BlF,KAAK0E,0BAA0B9E,EAAQc,GAAS,IAGlDI,aAAY,WACV,EAAK2D,UAAU7E,GACf,EAAK6C,YAAa,EAClB,EAAKI,OAASqC,KAtDlB,iD,4EA0DA,SAAS/D,GACP,OAAOnB,KAAKJ,OAAOwE,MAAK,qBAAGtF,KAAgBqC,O,0BAG7C,SAAawE,GACX,OAAO3F,KAAKJ,OAAOgD,QAAO,SAACpC,GAAD,OAAUA,EAAKoF,OAASD,O,2BAGpD,SAAcE,GACZ,OAAO7F,KAAKJ,OAAOgD,QAAO,SAACpC,GAAD,OAAUA,EAAKC,QAAUoF,O,uBAGrD,WAA4B,IAAlB9F,IAAiB,yDACzB,OAAOC,KAAKJ,OAAOgD,QAAO,SAACpC,GAAD,OAAUA,EAAKT,WAAaA,O,kCAGxD,SAAqBoB,GAAS,IAAD,EAC3B,SAAQ,UAACnB,KAAKJ,OAAOwE,MAAK,SAAC5D,GAAD,OAAUA,EAAK1B,KAAOqC,YAAxC,aAAC,EAAgDpB,Y,2BAG3D,SAAcS,EAAME,GAClB,GAAI,OAACF,QAAD,IAACA,OAAD,EAACA,EAAM1B,GAAX,CAGA,IAAMc,EAAM,YAAOI,KAAKJ,QACpBA,EAAOY,EAAK1B,MACdc,EAAOY,EAAK1B,IAAM0B,GAEpBR,KAAK0E,0BAA0B9E,EAAQc,GAAS,GAChDV,KAAKyE,UAAU7E,M,0EAGjB,WAA4Bc,GAA5B,4CAAAH,EAAA,yDAAqCuF,EAArC,iCACM9F,KAAKD,UAAa+F,EADxB,oDAKQb,EAAWjF,KAAK+F,aAAarF,GAEnCV,KAAKD,UAAW,EACViG,EAAoBhG,KAAKiG,eAAevF,KACxC4E,EAAcL,KAAY,OAACe,QAAD,IAACA,OAAD,EAACA,EAAmBX,SATtD,4CAYYrF,KAAKH,WAZjB,aAYY,EAAUqG,UAAUxF,GAZhC,iDAaMsF,EAbN,QAWQpG,EAXR,KAeEkB,aAAY,WACV,EAAK2D,UAAU7E,GACf,EAAKG,UAAW,EAChB,EAAK8C,OAAS,EACd,EAAKC,MAAQ,EACb,EAAKqD,kBAAkBzF,MAGzB4E,GAAetF,KAAKoG,cAAcxG,EAAQc,GAvB5C,iD,iFA0BA,SAAaA,GACX,IACQoE,GADQnD,EAAaiD,SAAS,WACRlE,IAAY,IAAlCoE,UAIR,OAFYE,KAAKD,MAEJD,EAAY,EAAIpD,I,yBAG/B,WACEC,EAAaiD,SAAS,WAAajD,EAAa+D,UAAU,CAAE9F,OAAQ,KACpE+B,EAAaiD,SAAS,YAAcjD,EAAa+D,UAAU,CAAEf,QAAS,O,kCAGxE,SAAqBjE,GAAU,IAAD,EAC5B,iBAAOiB,EAAaiD,SAAS,UAAUlE,UAAvC,aAAO,EAA0C0E,MAC/CpF,KAAK6C,OACL7C,KAAK8C,MAAQ9C,KAAK6C,U,4BAItB,SAAenC,GAEb,OADsBiB,EAAaiD,SAAS,WACpBjD,EAAaiD,SAAS,UAAUlE,K,2BAG1D,SAAcd,EAAQc,GAA4B,IAAD,EAAlB2F,EAAkB,wDACzCL,EAAoBrE,EAAaiD,SAAS,WAC5C,UAAAoB,EAAkBtF,UAAlB,eAA4B2E,UAAWgB,GAG3C1E,EAAa+D,UAAU,CACrB9F,OAAO,2BAAMoG,GAAP,kBAA2BtF,EAAUd,Q,uCAI/C,SAA0BA,EAAQc,GAAyB,IAAhB4F,EAAe,wDACxD,IAAIA,EAAJ,CAIA,IAAMN,EAAoBhG,KAAKiG,eAAevF,GACxC6F,EAAgBtC,MAAMC,QAAQ8B,GAAd,YACdA,GACJ,GAgBJ,OAfM,OAANpG,QAAM,IAANA,KAAQoC,SAAQ,SAACxB,GACf,IAAIgG,GACW,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAmB5B,MAAK,WAAmBC,GAAW,IAA3BvF,EAA0B,EAA1BA,GACrCwF,GAD+D,EAAtBvE,UAClBjB,GAAMA,KAAE,OAAK0B,QAAL,IAAKA,OAAL,EAAKA,EAAM1B,IAIhD,OAHIwF,IACFkC,EAAanC,GAERC,QAGPiC,EAAcC,GAAd,2BAAiCD,EAAcC,IAAgBhG,OAInER,KAAKoG,cAAcG,EAAe7F,GAAS,GACpC6F,EAtBLvG,KAAKoG,cAAcxG,EAAQc,GAAS,O,KC3R7B+F,EAAc,SAACC,EAASC,EAAcvG,GAEjD,OADM,OAANA,QAAM,IAANA,OAoBK,SAAP,oCAnBSwG,CACLC,QAAQtH,QAAQmH,GACbI,MAAK,SAACjG,GAAD,MAAU,CAACA,OAAM2D,MACtBuC,OAAM,SAACC,GAAD,OAAWH,QAAQtH,QAAQ,MAACiF,EAAWwC,OAChDL,I,4CAeG,WAA2BD,EAASC,GAApC,qBAAApG,EAAA,sEACwBmG,EADxB,sCACExE,EADF,OACS8E,EADT,6BAGHC,QAAQD,MAAMA,GAHX,kBAIIL,GAJJ,gCAMEzE,GANF,6C,sBASA,IAAMgF,EAAa,SAAChF,GAAD,MAA4B,oBAAVA,GClBvBiF,E,WAMnB,WAAYtH,GAAM,yBALlBE,UAAW,EAKM,KAJjB6C,OAAS,GAIQ,KAHjBwE,UAAY,GAIVnH,YAAeD,KAAM,CACnBD,SAAUG,IACVkH,UAAWlH,IACX0C,OAAQ1C,IACR8C,UAAW5C,IAAOC,MAClB6C,SAAUC,IACVC,OAAQD,IACRkE,eAAgBjH,IAAOC,QAEzBL,KAAKH,IAAMA,EACXG,KAAKsD,c,gDAGP,SAAagE,GACX,OAAQtH,KAAKoH,UAAYnD,MAAMC,QAAQoD,GACnCA,EACA,CAACA,K,uBAGP,SAAU1E,GACR,OAAQ5C,KAAK4C,OAASoB,OAAOpB,K,yBAG/B,SAAY2E,GACV,OAAOvH,KAAKoH,UAAUhD,MAAK,SAAC1D,GAAD,OAAaA,IAAY6G,O,oBAGtD,WACE,ODrC8B,SAAC3E,EAAQ4E,GACzC,IAAM/D,EAAe,OAAGb,QAAH,IAAGA,OAAH,EAAGA,EAAQc,cAChC,OAAO8D,EACJ5E,QAAO,SAACe,GAAD,oBAAUA,QAAV,IAAUA,GAAV,UAAUA,EAAMD,qBAAhB,aAAU,EAAqBE,SAASH,MAC/CF,MACC,SAAChD,EAAGiD,GAAJ,eACG,OAADjD,QAAC,IAADA,GAAA,UAAAA,EAAGmD,qBAAH,eAAkBG,QAAQJ,KAA1B,OACAD,QADA,IACAA,GADA,UACAA,EAAGE,qBADH,aACA,EAAkBG,QAAQJ,OC8BvBgE,CAAmBzH,KAAK4C,OAAQ5C,KAAKoH,a,kBAG9C,WACE,OAAO,YAAIpH,KAAKoH,WAAW7D,S,mEAG7B,iDAAAhD,EAAA,0DACMP,KAAKD,SADX,oDAIQ2H,EAAuB/F,EAAaiD,SAAS,eAC7CU,IAAc,OAACoC,QAAD,IAACA,GAAD,UAACA,EAAsB7G,YAAvB,aAAC,EAA4BwE,SALnD,2CAQcrF,KAAKH,WARnB,aAQc,EAAU8H,wBARxB,gDASQD,EATR,gDASiC,GATjC,eAMU7G,EANV,EAMUA,KAAMD,EANhB,EAMgBA,OAIRwG,EAVR,OAUoBvG,QAVpB,IAUoBA,OAVpB,EAUoBA,EAAMlC,KAAI,qBAAG+B,WAC/B4E,GAAe3D,EAAa+D,UAAU,CAAE0B,UAAW,CAAEvG,OAAMD,YAC3DE,aAAY,WAAO,IAAD,GAChB,YAAKjB,WAAL,eAAUkB,UAAUH,KAAW,EAAKgH,aAAaR,GACjD,EAAKrH,UAAW,KAdpB,iD,+EAkBA,WACE4B,EAAaiD,SAAS,cACpBjD,EAAa+D,UAAU,CAAE0B,UAAW,S,KClErBS,E,WAQnB,WAAYC,GAAoC,IAAD,yDAAJ,GAAbC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,IAAY,yBAP/CC,YAAc,CAAEF,IAAK,KAAMC,IAAK,MAOe,KAN/CE,SAAW,GAMoC,KAL/CxH,QAAU,GAKqC,KAJ/CyH,OAAS,GAIsC,KAH/CpI,UAAW,EAITC,KAAK8H,eAAiBA,EAEtB7H,YAAeD,KAAM,CACnBiI,YAAa/H,IACbgI,SAAUhI,IACVQ,QAASR,IACTiI,OAAQjI,IACRH,SAAUG,IACVsB,aAAc2B,IACd5B,aAAcnB,IAAOC,aAGNmE,KAAhBuD,GAAOC,GACJhI,KAAKoI,eAAe,CAAEL,MAAKC,QAC3BhI,KAAKqI,uB,kDAGX,WAAmC,IAAD,yDAAJ,GAAbN,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,IACpB,OAAQhI,KAAKiI,YAAc,CAAEF,MAAKC,S,yBAGpC,SAAYjI,GACV,OAAQC,KAAKD,SAAWA,I,yBAG1B,SAAYmI,GACV,OAAQlI,KAAKkI,SAAWA,I,wBAG1B,SAAWxH,GACT,OAAQV,KAAKU,QAAUA,I,uBAGzB,SAAUyH,GACR,OAAQnI,KAAKmI,OAASA,I,kCAGxB,WAAwB,IAAD,OACrBG,WACEA,UAAUC,YAAYC,oBAAmB,SAACC,GACxC,MAA0CA,EAASC,QAAU,GAA3CX,EAAlB,EAAQY,SAA0BX,EAAlC,EAAuBY,UACvB,EAAKR,eAAe,CAAEL,MAAKC,a,wBAIjC,WACE,MAAO,CACLD,IAAK/H,KAAKiI,YAAYF,IACtBC,IAAKhI,KAAKiI,YAAYD,IACtBxH,KAAMR,KAAKkI,SACXxH,QAASV,KAAKU,QACdD,MAAOT,KAAKmI,U,iEAIhB,iEAAA5H,EAAA,yDAAmBsI,EAAnB,iCACM7I,KAAKD,UAAa8I,EADxB,0DAOM7I,KADFiI,YAAeF,EANnB,EAMmBA,IAAKC,EANxB,EAMwBA,IANxB,mBASWhI,KAAK8H,sBAThB,aASW,EAAqBgB,WAAW,CAAEf,MAAKC,QATlD,gDAS6D,GAT7D,cAQUE,EARV,EAQUA,SAAUxH,EARpB,EAQoBA,QAASyH,EAR7B,EAQ6BA,OAAQO,EARrC,EAQqCA,OAGnC5H,aAAY,WACVoH,GAAY,EAAKa,YAAYb,GAC7BxH,GAAW,EAAKsI,WAAWtI,GAC3ByH,GAAU,EAAKc,UAAUd,GACzBO,GAAU,EAAKN,eAAeM,GAC9B,EAAKQ,aAAY,MAhBrB,iD,8ECjEIC,EAAU,CAEdC,OAAQ,MACR,eAAgB,oBA0JH,MAvJf,WAME,aAAqC,IAAD,yDAAJ,GAAlBC,EAAsB,EAAtBA,QAAShK,EAAa,EAAbA,KAAa,yBALpCgK,QAAU,GAK0B,KAJpChK,KAAO,GAI6B,KAHpCiK,iBAAmB,EAIjBtJ,KAAKqJ,QAAL,OAAeA,QAAf,IAAeA,IAAWrJ,KAAKqJ,QAC/BrJ,KAAKX,KAAL,OAAYA,QAAZ,IAAYA,IAAQW,KAAKX,KACzBW,KAAKuJ,yBATT,gGAYE,4BAAAhJ,EAAA,sEACyBkG,EACrB+C,IAAMC,IAAN,UAAazJ,KAAKqJ,QAAlB,cAAuC,CACrCK,OAAQ,CAAEzH,IAAKjC,KAAK2J,WACpBR,YAEFnJ,KAAK4J,6BANT,cACQC,EADR,gCASSA,QATT,IASSA,OATT,EASSA,EAAUhJ,MATnB,gDAZF,uIAwBE,WAAmCH,GAAnC,eAAAH,EAAA,sEACyBkG,EACrB+C,IAAMC,IAAN,UAAazJ,KAAKqJ,QAAlB,WAAoC,CAClCK,OAAQ,CAAEhJ,UAASuB,IAAKjC,KAAK2J,WAC7BR,YAEFnJ,KAAK4J,6BANT,cACQC,EADR,gCASSA,QATT,IASSA,OATT,EASSA,EAAUhJ,MATnB,gDAxBF,6HAoCE,WAAwBH,EAASD,GAAjC,qBAAAF,EAAA,sEACyBkG,EACrB+C,IAAMC,IAAN,UAAazJ,KAAKqJ,QAAlB,WAAoC,CAClCK,OAAQ,CACNhJ,UACAD,QACAwB,IAAKjC,KAAK2J,WAEZR,YAEFnJ,KAAK4J,6BAVT,cACQC,EADR,UAamC,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUhJ,OAAQ,GAAnCA,EAbV,EAaUA,KAAMD,EAbhB,EAagBA,OAbhB,kBAeSZ,KAAKe,UAAUH,GAAf,OACHC,QADG,IACHA,OADG,EACHA,EAAMlC,KAAI,kBAAe,CAAE6B,KAAjB,EAAGA,KAAoBE,UAASD,YAC1C,IAjBN,gDApCF,uHAwDE,WAAgBC,GAAhB,4BAAAH,EAAA,sEAEWP,KAAK8J,6BAA6BpJ,GAF7C,gDAE0D,GAF1D,iBACUE,EADV,EACUA,OAAcmJ,EADxB,EACkBlJ,KAGXb,KAAKe,UAAUH,GAJtB,kCAKiBiG,QAAQtH,QAAQ,IALjC,kEAQuBsH,QAAQmD,IAC3BD,EAAOpL,KAAI,SAAC8B,GAAD,OAAW,EAAKgB,kBAAkBf,EAAvB,OAAgCD,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAOA,WAC7DsG,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,MAVnC,eAQQpH,EARR,yBAYSqK,EAAWC,UAAUD,EAAWE,WAAWvK,KAZpD,iDAxDF,0HAuEE,WAAqBY,EAAMC,EAAOC,GAAlC,eAAAH,EAAA,sEACyBkG,EACrB+C,IAAMC,IAAN,UAAazJ,KAAKqJ,QAAlB,SAAkC,CAChCK,OAAQ,CAAElJ,OAAME,UAASD,QAAOwB,IAAKjC,KAAK2J,WAC1CR,YAEFnJ,KAAK4J,6BANT,cACQC,EADR,uBASeA,QATf,IASeA,OATf,EASeA,EAAUhJ,KATzB,wFAvEF,mIAmFE,WAA0BuJ,GAA1B,sBAAA7J,EAAA,sEAC8BsG,QAAQmD,IAClCI,EAAWzL,IAAX,uCAAe,WAAOyC,GAAP,qBAAAb,EAAA,6DACLC,EAAyBY,EAAzBZ,KAAMC,EAAmBW,EAAnBX,MAAOC,EAAYU,EAAZV,QADR,SAGU,EAAKC,eAAeH,EAAMC,EAAOC,GAH3C,cAGPmJ,EAHO,yBAKN,EAAKQ,YAAL,eAAsBR,GAAYzI,IAL5B,2CAAf,wDAOA2F,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,MATnC,cACQvB,EADR,yBAWSA,GAXT,2CAnFF,8FAiGE,WACEzF,KAAKsJ,qBAlGT,oCAqGE,WAA0C,IAAD,OAAlBgB,EAAkB,uDAAP,IAChCC,aAAY,kBAAO,EAAKhB,uBAAyB,IAAIe,KAtGzD,qBAyGE,WACE,OAAOtK,KAAKX,KAAKW,KAAKsJ,iBAAmBtJ,KAAKX,KAAKgG,UA1GvD,2EA6GE,gDAAA9E,EAAA,8FAA4C,GAAbwH,EAA/B,EAA+BA,IAAKC,EAApC,EAAoCA,IAC5B0B,OACalF,KAAhBuD,GAAOC,GACJ,CAAE/F,IAAKjC,KAAK2J,UAAW5B,MAAKC,OAC5B,CAAE/F,IAAKjC,KAAK2J,WAJpB,SAKyBlD,EACrB+C,IAAMC,IAAN,UAAazJ,KAAKqJ,QAAlB,oBAA6C,CAAEK,WAC/C1J,KAAK4J,6BAPT,cAKQC,EALR,gCAUSA,QAVT,IAUSA,OAVT,EAUSA,EAAUhJ,MAVnB,gDA7GF,6EA0HE,SAAUD,GACR,MAAO,YAAY4J,KAAK5J,KA3H5B,yBAgJE,WAA8BQ,GAAW,IAA3BP,EAA0B,EAA1BA,KAAMD,EAAoB,EAApBA,OAClB,OAAOZ,KAAKe,UAAUH,IAAWC,EAA1B,uCACEO,GAAaP,GADf,IACqBd,UAAU,IAD/B,eAEEqB,MAnJb,wBA8HE,SAAiBxB,GACf,OAAOA,EAAOjB,KAAI,SAAC6B,EAAM1B,GAAP,mBAAC,eACd0B,GADa,IAEhB1B,KACAiB,UAAU,SAlIhB,yBAsIE,SAAmB0K,EAAUC,GAC3B,OAAO,IAAI7D,SAAQ,SAACtH,GAClBoL,YAAW,kBAAMpL,EAAQkL,OAAaC,QAxI5C,wBA4IE,SAAkB9K,GAChB,OAAQqE,MAAMC,QAAQtE,GAAUA,EAAS,CAACA,IAASgL,WA7IvD,KAuJe,CAAe,CAC5BvB,QNrKkC,+BMsKlChK,KNpK8B,CAC9B,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,0COFIwL,EAAiBvL,OAAOwL,OAAO,CACnC5C,SAAU,SACVxH,QAAS,SACTyH,OAAQ,UACRO,OAAQ,CAAEX,IAAK,UAAWC,IAAK,aAG3B+C,EAAS,CAAE1B,QPFoB,kCOEXpH,IPAM,oCOsBjB,MApBf,WAIE,aAAwC,IAAD,yDAAR8I,EAAjB1B,EAAyB,EAAzBA,QAASpH,EAAgB,EAAhBA,IAAgB,yBAHvCoH,QAAU,GAG6B,KAFvCpH,IAAM,GAGJjC,KAAKqJ,QAAL,OAAeA,QAAf,IAAeA,IAAWrJ,KAAKqJ,QAC/BrJ,KAAKiC,IAAL,OAAWA,QAAX,IAAWA,IAAOjC,KAAKiC,IAN3B,qFASE,2CAAA1B,EAAA,6DAAmBwH,EAAnB,EAAmBA,IAAKC,EAAxB,EAAwBA,IAChB0B,EAAS,CAAEsB,WAAYhL,KAAKiC,IAAKgJ,MAAM,GAAD,OAAKlD,EAAL,YAAYC,IAD1D,SAEyBvB,EACrB+C,IAAMC,IAAN,UAAazJ,KAAKqJ,QAAlB,YAAqC,CAAEK,YAH3C,cAEQG,EAFR,UAM4B,OAARA,QAAQ,IAARA,GAAA,UAAAA,EAAUhJ,YAAV,eAAgBA,OAAQ,CAACgK,GAN7C,mBAMSK,EANT,uBAOSA,GAPT,gDATF,+D,OCTaC,EAA0B,IAAIhE,EAAwBiE,GACtDC,EAAe,IAAIxD,EAAayD,GAChCC,EAAqB,IAAI/I,EAAmB4I,GAqB5CxJ,EAAQ,IAbnB,aAKS,IAAD,yDAAJ,GAJF2J,EAIM,EAJNA,mBACAC,EAGM,EAHNA,iBACAL,EAEM,EAFNA,wBACAE,EACM,EADNA,aACM,oBACNrL,KAAKJ,OAAS2L,EACdvL,KAAKyL,YAAcD,EACnBxL,KAAKoH,UAAY+D,EACjBnL,KAAKwB,aAAe6J,EAIH,CAAc,CACjCE,qBACAC,iBAtB8B,IAAI9L,EAAiB,CACnDC,QAAS0L,EACTzL,OAAQ2L,EACR1L,IAAKuL,IAoBLD,0BACAE,iBAGWK,EAAeC,IAAMC,gBAErBC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC3B,cAAC,EAAaC,SAAd,CAAuB7J,MAAON,EAA9B,SAAsCkK,K,wCClCzB,SAASE,EAASC,EAAiBC,GAehD,OAdcC,mBACZ,kBACE7M,OAAOwL,OAAO,CACZsB,QAASC,EAAaJ,GACtBC,YAAaG,EAAaC,EAAuBJ,IACjDK,mBACAC,eACAC,oBACAC,cACAC,uBAEJ,CAACV,EAAiBC,IAMtB,SAASG,EAAaO,GACpB,OAAOA,GAAYC,OAAQ,YAAmBD,EAApB,SAAoCE,QAGhE,SAASR,EAAuBJ,GAC9B,OAAOA,EAAc,EAAI,OAASA,EAAc,GAAK,OAAS,M,gCCvB1Da,GAAYC,YAAW,CAC3BC,QAAS,CACPxE,SAAU,WACVyE,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,UAAW,IACXC,QAAS,iBACTC,OAAQ,YA8BGC,oBA1Bf,YAA4C,IAAD,EAAZ1B,EAAY,EAAZA,SACrBL,EAAgBgC,qBAAW/B,GAA3BD,YAEFiC,EAAUX,KAEhB,IAEe,OAAXtB,QAAW,IAAXA,GAAA,UAAAA,EAAa3L,mBAAb,eAA0B6N,UAAW,CAAEvB,QAAS,KADlDA,QAGIwB,EAAQ5B,EAJd,EACa6B,GADb,EAC2BC,IAK3B,OACE,mCACG5G,EAAW4E,IACV,cAACiC,EAAA,EAAD,CAAOC,UAAWN,EAAQT,QAA1B,SACGxB,EAAY1L,SACX+L,EAAS,2BAAKL,GAAN,IAAmBmC,WAE3B,cAACK,GAAA,EAAD,W,UC2BZ,SAASC,GAAelL,EAAW0H,GACjC,IAAIyD,EACJ,OAAO,SAACC,GACNC,aAAaF,GACbA,EAAYxD,YAAW,WACrB3H,EAAUoL,KACT1D,IAIQ8C,oBAjEf,YAAgD,IAA1Bc,EAAyB,EAAzBA,YAAaxC,EAAY,EAAZA,SACjC,EAA8B2B,qBAAW/B,GAAjC9L,EAAR,EAAQA,OAAQwH,EAAhB,EAAgBA,UACVmH,EAAUC,cAEhB,EAA0BC,mBAAS,IAAnC,mBAAOL,EAAP,KAAcM,EAAd,KACA,EAAyCD,oBAAS,GAAlD,mBAAOE,EAAP,KAAsBC,EAAtB,KAEMC,EAAmBC,sBACvBZ,GAAetL,EAAOwE,EAAUpE,WAVb,KAWnB,IAGI+L,EAAkBD,sBACtBZ,GAAetL,EAAOhD,EAAOoD,WAfV,KAgBnB,IAgBF,SAASJ,EAAOI,GACd,OAAO,SAACoL,GACNQ,KAAiB,OAACR,QAAD,IAACA,OAAD,EAACA,EAAO/I,SACzBrC,EAAUoL,IAId,OAZAY,qBAAU,WACRH,EAAiBT,GACjBW,EAAgBX,KACf,CAACA,IAUF,eAACa,GAAA,EAAD,WACE,sBAAMC,YAAU,EAACC,aAAa,MAA9B,SACGjI,EAAWoH,IAAgBA,EAAY,CAAEF,QAAOgB,kBAvB7B,SAAClQ,GAAD,OAAOwP,EAASxP,EAAEmQ,OAAOnN,YAyB9CgF,EAAW4E,IACVA,EAAS,CACP1E,UAAWA,EAAUlE,SACrBtD,OAAQA,EAAOsD,SACfP,eAAgB/C,EAAO+C,eACvB2M,gBAzBgB,SAAC5O,GAAD,OAAa,kBACnC6N,EAAQxK,KAAR,mBAAyBrD,GAAW,CAAE6O,cAAc,MAyB9CC,aA7Ba,SAAC,GAAD,IAAGhP,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAAS5B,EAAzB,EAAyBA,GAAzB,OAAkC,kBACrDyP,EAAQxK,KAAR,gBAAsBrD,EAAtB,YAAiCD,EAAjC,YAA0CD,EAA1C,mBAAyD1B,MA6BnD6P,wB,wCC9CJ5B,GAAYC,YAAW,CAC3ByC,YAAa,CACXC,MAAO,IACPC,SAAU,QAEZ1C,QAAS,CACPM,OAAQ,YAoCGC,oBAhCf,WAA0B,IAAD,EACvB,EAA4CC,qBAAW/B,GAA/CtE,EAAR,EAAQA,UAAWxH,EAAnB,EAAmBA,OAAQ4B,EAA3B,EAA2BA,aACrBwH,EAAa8F,uBACjB,SAAC5P,GAAD,OAAOU,EAAOmD,sBAAsB7D,EAAEmQ,OAAOnN,OAAO,KACpD,CAACtC,IAGG8N,EAAUX,KAEVpK,EAAc,UAAG/C,EAAO+C,sBAAV,QAA4BnB,EAAad,QAE7D,OACE,cAACuO,GAAA,EAAD,CAAKjB,UAAWN,EAAQT,QAAxB,SACE,eAAC2C,GAAA,EAAD,CAAa5B,UAAWN,EAAQ+B,YAAhC,UACE,cAACI,GAAA,EAAD,CAAY/Q,GAAG,2BAAf,qBACA,cAACgR,GAAA,EAAD,CACEC,QAAQ,2BACRjR,GAAG,qBACHkR,SAAUhH,EACV9G,MAAOS,EAJT,SAMGyE,EAAUhE,OAAOzE,KAAI,SAAC+B,GAAD,OACpB,cAACuP,GAAA,EAAD,CAAwB/N,MAAOxB,EAA/B,SACGA,GADYA,gBCtCrBqM,GAAYC,YAAW,CAC3BC,QAAS,CACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZG,OAAQ,YA2BGC,oBAvBf,WACE,IAAME,EAAUX,KAEhB,EAGIU,qBAAW/B,IAAiB,CAAE9L,OAAQ,IAH1C,IACEA,OAAU+C,EADZ,EACYA,eAAgB5C,EAD5B,EAC4BA,SACVoI,EAFlB,EAEE3G,aAAgB2G,OAEZzH,EAAO,OAAGiC,QAAH,IAAGA,IAAkBwF,EAClC,OACE,cAAC8G,GAAA,EAAD,CAAKjB,UAAWN,EAAQT,QAAxB,SACGlN,EACC,eAAC,IAAD,CACEmF,GAAI,CAAEgL,SAAS,WAAD,OAAaxP,GAAWD,MAAO,CAAE8O,cAAc,IAD/D,4BAGkB7O,KAGlB,cAACuN,GAAA,EAAD,S,oBC5BO,SAASkC,KACtB,MAAwB1B,mBAAS,IAAjC,mBAAO2B,EAAP,KAAaC,EAAb,KACMC,EAAgBC,mBAEtBvB,qBAAU,WAGR,OAFAwB,IACAF,EAAc3C,QAAUpD,YAAYiG,EAAY,KACzC,kBAAMC,cAAcH,EAAc3C,YACxC,IAEH,IXkB0B+C,EWlBpBC,EAAkB7B,uBXkBE4B,EWjBZ,EXiBuB,SAACE,GAAD,OAAa,SAAC1O,GAAD,gBAC/C0O,EAAQ1O,GAASwO,EAAS,IADqB,OAChBxO,OWlBjB,SAACA,GAAD,OAAW2O,OAAO3O,GAAS,MAC1C,IAGF,SAASsO,IACP,IAAMzL,EAAM,IAAIC,KACV8L,EAAc,CAClBC,MAAOJ,EAAgB5L,EAAIiM,YAC3BC,QAASN,EAAgB5L,EAAImM,cAC7BC,QAASR,EAAgB5L,EAAIqM,eAE/Bf,EAAQS,GAGV,IAAQC,EAA4BX,EAA5BW,MAAOE,EAAqBb,EAArBa,QAASE,EAAYf,EAAZe,QAExB,OACE,eAACE,GAAA,EAAD,CAAYC,QAAQ,KAApB,UACE,+BAAOP,IADT,IACuB,+BAAOE,IAD9B,IAC8C,+BAAOE,OC9BzD,IAAMpE,GAAYC,YAAW,CAC3BuE,iBAAkB,CAChB9I,SAAU,WACV+I,KAAM,GACNC,OAAQ,GACR/B,MAAO,IAET7O,KAAM,CACJqM,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBG,QAAS,eAEXoE,YAAa,CACXxE,QAAS,OACTyE,cAAe,SACfxE,eAAgB,gBAChBC,WAAY,cAEdwE,WAAY,CACV1E,QAAS,OACTyE,cAAe,MACfrE,QAAS,WACTF,WAAY,SACZD,eAAgB,SAChB0E,KAAM,QAERC,KAAM,CACJC,OAAQ,GACRC,aAAc,GAEhBC,YAAa,CACXF,OAAQ,OACR7E,QAAS,SAEXgF,mBAAoB,CAClBH,OAAQ,KAEV9E,QAAS,CACPxE,SAAU,WACV4E,UAAW,IACXC,QAAS,iBACTC,OAAQ,YAIG,SAAS4E,GAAT,GAA8D,IAAD,oBAA/BrS,EAA+B,EAA/BA,YAAsB8N,GAAS,EAAlBjO,QAAkB,EAATiO,OAC3DwE,EAAWrF,KACjB,OACE,eAACkC,GAAA,EAAD,WACE,cAACoC,GAAA,EAAD,CAAYgB,MAAM,SAASf,QAAQ,KAAKgB,WAAS,EAAjD,+BAGA,eAACC,GAAA,EAAD,CAAMC,WAAS,EAACpF,WAAW,SAASqF,QAAQ,aAAaC,QAAS,EAAlE,UACE,cAACH,GAAA,EAAD,CAAM5O,MAAI,EAACqK,UAAWoE,EAASF,mBAA/B,SACE,qBACElE,UAAWoE,EAASH,YACpBU,IAAI,uBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOxB,YAGhB,cAACmG,GAAA,EAAD,CAAM5O,MAAI,EAAV,SACE,eAAC0N,GAAA,EAAD,CAAYwB,MAAM,UAAUvB,QAAQ,KAApC,iBACGxR,QADH,IACGA,GADH,UACGA,EAAa6N,eADhB,iBACG,EAAsBvB,eADzB,aACG,EAA+B0B,GADlC,cAIF,cAACyE,GAAA,EAAD,CAAM5O,MAAI,EAACqK,UAAWoE,EAASF,mBAA/B,SACE,eAACjD,GAAA,EAAD,CAAKjB,UAAWoE,EAASR,WAAzB,UACE,eAAC3C,GAAA,EAAD,CAAKjB,UAAWoE,EAASV,YAAzB,UACE,eAACzC,GAAA,EAAD,CAAKjB,UAAWoE,EAASvR,KAAzB,UACE,qBACEmN,UAAWoE,EAASN,KACpBa,IAAI,gBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOrB,WAEd,eAAC0C,GAAA,EAAD,CAAKjB,UAAWoE,EAASV,YAAzB,UACE,cAACL,GAAA,EAAD,CAAYC,QAAQ,YAApB,sBACA,eAACD,GAAA,EAAD,CAAYC,QAAQ,KAApB,iBACGxR,QADH,IACGA,GADH,UACGA,EAAa6N,eADhB,iBACG,EAAsBvB,eADzB,aACG,EAA+B0G,GADlC,aAMJ,eAAC7D,GAAA,EAAD,CAAKjB,UAAWoE,EAASvR,KAAzB,UACE,qBACEmN,UAAWoE,EAASN,KACpBa,IAAI,gBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOjB,WAEd,eAACsC,GAAA,EAAD,CAAKjB,UAAWoE,EAASV,YAAzB,UACE,cAACL,GAAA,EAAD,CAAYC,QAAQ,YAApB,sBACA,eAACD,GAAA,EAAD,CAAYC,QAAQ,KAApB,iBACGxR,QADH,IACGA,GADH,UACGA,EAAa6N,eADhB,iBACG,EAAsBvB,eADzB,aACG,EAA+B2G,GADlC,mBAMN,eAAC9D,GAAA,EAAD,CAAKjB,UAAWoE,EAASV,YAAzB,UACE,eAACzC,GAAA,EAAD,CAAKjB,UAAWoE,EAASvR,KAAzB,UACE,qBACEmN,UAAWoE,EAASN,KACpBa,IAAI,kBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOpB,OAEd,eAACyC,GAAA,EAAD,CAAKjB,UAAWoE,EAASV,YAAzB,UACE,cAACL,GAAA,EAAD,CAAYC,QAAQ,YAApB,wBACA,eAACD,GAAA,EAAD,CAAYC,QAAQ,KAApB,iBACGxR,QADH,IACGA,GADH,UACGA,EAAa6N,eADhB,iBACG,EAAsBvB,eADzB,aACG,EAA+B4G,GADlC,gBAKJ,eAAC/D,GAAA,EAAD,CAAKjB,UAAWoE,EAASvR,KAAzB,UACE,qBACEmN,UAAWoE,EAASN,KACpBa,IAAI,gBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOnB,YAEd,eAACwC,GAAA,EAAD,CAAKjB,UAAWoE,EAASV,YAAzB,UACE,cAACL,GAAA,EAAD,CAAYC,QAAQ,YAApB,uBACA,eAACD,GAAA,EAAD,CAAYC,QAAQ,KAApB,iBACGxR,QADH,IACGA,GADH,UACGA,EAAa6N,eADhB,iBACG,EAAsBlB,iBADzB,aACG,EAAiCwG,MADpC,wBAQV,eAACV,GAAA,EAAD,CAAM5O,MAAI,EAACqK,UAAWoE,EAASF,mBAA/B,UACE,cAACb,GAAA,EAAD,CAAYC,QAAQ,WAApB,SAAgCxR,EAAYY,UAC5C,cAAC2Q,GAAA,EAAD,CAAYwB,MAAM,gBAAgBvB,QAAQ,YAA1C,SACGxR,EAAYW,QAEf,cAAC4Q,GAAA,EAAD,CAAYwB,MAAM,YAAYP,WAAS,EAAChB,QAAQ,KAAhD,SACGxR,EAAYU,OAEf,cAAC2P,GAAD,UAGJ,qBACEnC,UAAWoE,EAASb,iBACpBoB,IAAI,oBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOlB,S,4CC9HdK,GAAYC,YAAW,CAC3BkG,OAAQ,CACNxD,MAAO,IACPC,SAAU,OACVpC,OAAQ,eAEV4F,KAAM,CACJ5F,OAAQ,UAEViF,UAAW,CACTjF,OAAQ,UAEVN,QAAS,CACPxE,SAAU,WACV2K,UAAW,oBACXC,UAAW,SACX3D,MAAO,IACPC,SAAU,OACVoC,OAAQ,IACRuB,UAAW,OACXC,gBAAiB,UACjBjG,QAAS,GACTkG,OAAQ,GAEVC,SAAU,CAAEC,OAAQ,aAGP,SAASC,KACtB,IAAMjG,EAAUX,KAEVuB,EAAcQ,uBAClB,gBAAGV,EAAH,EAAGA,MAAOgB,EAAV,EAAUA,kBAAV,OACE,cAACwE,GAAA,EAAD,CACE5F,UAAWN,EAAQwF,OACnBhR,MAAOkM,EACP4B,SAAUZ,EACVtQ,GAAG,iBACH+U,MAAM,SACNC,YAAY,qBACZxC,QAAQ,eAGZ,IAGIyC,EAAkBjF,uBACtB,SAAC1H,EAAWzE,EAAgB2M,GAA5B,OACE,eAACL,GAAA,EAAD,CAAKjB,UAAWN,EAAQyF,KAAxB,UACE,cAAC9B,GAAA,EAAD,CAAYC,QAAQ,KAApB,uBAEA,cAAC0C,GAAA,EAAD,iBACG5M,QADH,IACGA,OADH,EACGA,EAAWzI,KAAI,SAAC+B,GAAD,OACd,cAACuT,GAAA,EAAD,CACEjG,UAAWN,EAAQ+F,SAEnBS,SAAUvR,IAAmBjC,EAC7ByT,QAAS7E,EAAgB5O,GAJ3B,SAMGA,GAJIA,aAUf,IAGI0T,EAAetF,uBACnB,SAAClP,EAAQ+C,EAAgB6M,GAAzB,OACE,eAACP,GAAA,EAAD,CAAKjB,UAAWN,EAAQyF,KAAxB,UACE,eAAC9B,GAAA,EAAD,CAAYC,QAAQ,KAApB,wBAAqC3O,KACrC,cAACqR,GAAA,EAAD,iBACGpU,QADH,IACGA,OADH,EACGA,EAAQjB,KAAI,gBAAG6B,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAAS5B,EAAzB,EAAyBA,GAAzB,OACX,cAACmV,GAAA,EAAD,CACEjG,UAAWN,EAAQ+F,SAEnBU,QAAS3E,EAAa,CAAEhP,OAAMC,QAAOC,UAAS5B,OAHhD,SAKE,eAACmQ,GAAA,EAAD,WACE,cAACoC,GAAA,EAAD,CAAYC,QAAQ,UAApB,SAA+B7Q,IAC/B,eAAC4Q,GAAA,EAAD,CAAYC,QAAQ,KAApB,UAA0B9Q,EAA1B,WALG1B,aAYf,IAqBF,OACE,eAACmQ,GAAA,EAAD,CAAKjB,UAAWN,EAAQ8E,UAAxB,UACE,eAACD,GAAA,EAAD,CAAMC,WAAS,EAAC6B,UAAU,SAAS5B,QAAQ,SAASrF,WAAW,SAA/D,UACE,cAACiE,GAAA,EAAD,CAAYC,QAAQ,KAApB,0BACA,cAACgD,GAAD,CAAQhG,YAAaA,EAArB,SAtBgB,SAAC,GAAD,IACpBlH,EADoB,EACpBA,UACAxH,EAFoB,EAEpBA,OACA4P,EAHoB,EAGpBA,aACAF,EAJoB,EAIpBA,gBACAX,EALoB,EAKpBA,cACAhM,EANoB,EAMpBA,eANoB,OAQpB,mCACGgM,GACC,eAACZ,EAAA,EAAD,CAAOC,UAAWN,EAAQT,QAA1B,UACGmH,EAAaxU,EAAQ+C,EAAgB6M,GACtC,cAAC+E,GAAA,EAAD,IACCR,EAAgB3M,EAAWzE,EAAgB2M,WAU9C,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,GAAD,UACG,SAACkF,GAAD,OAAW,cAACrC,GAAD,eAAwBqC,U,wBC5HtCzH,GAAYC,YAAW,CAC3ByH,IAAK,CACHhM,SAAU,QACViM,OAAQ,GACRjD,MAAO,IAET5Q,KAAM,CACJqM,QAAS,OACTC,eAAgB,aAChBC,WAAY,SACZG,OAAQ,aAEVoH,KAAM,CACJrH,QAAS,GACTC,OAAQ,SACRmC,MAAO,IACPgE,OAAQ,WAEV5B,KAAM,CACJpC,MAAO,MACPqC,OAAQ,GACR6C,eAAgB,UAChBC,mBAAoB,SACpBC,iBAAkB,aAEpBtC,UAAW,CAAEjF,OAAQ,UACrBN,QAAS,CACPI,UAAW,OACXH,QAAS,OACTC,eAAgB,aAChBC,WAAY,gBAID,SAAS2H,GAAT,GAAkD,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,OAAQd,EAAiB,EAAjBA,QAC7C,EAD8D,EAARtT,MAK1C,CAAE8M,QAAS,IAHrBnN,EADF,EACEA,KACAC,EAFF,EAEEA,MAFF,IAGEkN,QAAWvB,EAHb,EAGaA,QAASK,EAHtB,EAGsBA,UAGhBiB,EAAUX,KAEVa,EAAQ5B,EAAQ,OAACI,QAAD,IAACA,OAAD,EAACA,EAASyB,GAAV,OAAczB,QAAd,IAAcA,OAAd,EAAcA,EAAS0B,IAE7C,OACE,eAACoH,GAAA,EAAD,CAAMlH,UAAWN,EAAQiH,KAAMQ,IAAKH,EAAOC,GAASd,QAASA,EAA7D,UACE,cAAC9C,GAAA,EAAD,CAAYwB,MAAM,gBAAgBR,MAAM,SAASf,QAAQ,YAAzD,SACG7Q,IAEH,cAAC4Q,GAAA,EAAD,CAAYgB,MAAM,SAASC,WAAS,EAAChB,QAAQ,KAA7C,SACG9Q,IAEH,eAACyO,GAAA,EAAD,CAAKjB,UAAWN,EAAQ7M,KAAxB,UACE,cAACuU,GAAA,EAAD,CAAWpH,UAAWN,EAAQoE,KAAMuD,MAAK,OAAEzH,QAAF,IAAEA,OAAF,EAAEA,EAAOxB,UAClD,eAACiF,GAAA,EAAD,CAAYwB,MAAM,gBAAgBvB,QAAQ,KAA1C,iBACGlF,QADH,IACGA,OADH,EACGA,EAAS0B,GADZ,SACuB,UAGzB,eAACmB,GAAA,EAAD,CAAKjB,UAAWN,EAAQ7M,KAAxB,UACE,cAACuU,GAAA,EAAD,CAAWpH,UAAWN,EAAQoE,KAAMuD,MAAK,OAAEzH,QAAF,IAAEA,OAAF,EAAEA,EAAOnB,YAClD,eAAC4E,GAAA,EAAD,CAAYwB,MAAM,gBAAgBvB,QAAQ,KAA1C,iBACG7E,QADH,IACGA,OADH,EACGA,EAAWwG,MADd,OACyB,a,sDCvD3BlG,GAAYC,YAAW,CAC3ByH,IAAK,CACHhM,SAAU,QACViM,OAAQ,GACRjD,MAAO,IAETe,UAAW,CAAEjF,OAAQ,UACrBN,QAAS,CACPI,UAAW,OACXH,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdkI,OAAQ,CACN7M,SAAU,QACV+K,OAAQ,EACR+B,KAAM,GACN/D,IAAK,MAyFMhE,oBArFf,WACE,IAAQ5N,EAAW6N,qBAAW/B,GAAtB9L,OACF8J,EAAS8L,cACTjH,EAAUC,cACViH,EAAWC,cACXhI,EAAUX,KAEV4I,EAAoB/V,EAAO+C,iBAAmB+G,EAAOhJ,QAErDsU,EC9CO,SAAqBY,GAAkB,IAAZC,EAAW,uDAAJ,GACzCC,EAA0BvF,mBAC1BwF,EAAoBxF,mBAqB1B,OAnBAvB,qBACE,WAAO,IAAD,QAOJ,OANA,UAAA8G,EAAwBnI,eAAxB,mBAAiCqI,kBAAjC,iBACAF,EAAwBnI,QAAU,IAAIsI,sBAAqB,YAAa,oBAChEC,gBAAkBN,OAE1BG,EAAkBpI,UAAlB,UACEmI,EAAwBnI,eAD1B,iBACE,EAAiCwI,eADnC,OACE,SAA2CJ,EAAkBpI,UACxD,oCAAMmI,EAAwBnI,eAA9B,iBAAM,EAAiCqI,kBAAvC,aAAM,aAEf/R,MAAMC,QAAQ2R,GAAQA,EAAO,IAGhB,SAACZ,GAAD,OAAY,SAACmB,GACtBnB,IACFc,EAAkBpI,QAAUyI,KD2BjBC,CAAYzW,EAAO0W,kBAAkBC,KAAK3W,GAAS,CAChEA,EAAOyD,OAAOgC,OACdzF,IAGFoP,qBAAU,YAdW,sCAenBwH,CAAWb,EAAmBjM,EAAOhJ,WACpC,CAACiV,EAAmBjM,EAAOhJ,QAASd,IAEvCoP,qBAAU,WAAO,IAAD,GACb,UAACyG,EAAShV,aAAV,aAAC,EAAgB8O,eAAgBkH,MACjC,CAAChB,EAAShV,QAEb,IAAM+O,EAAe,SAAC,GAAD,IAAG9O,EAAH,EAAGA,QAASD,EAAZ,EAAYA,MAAOD,EAAnB,EAAmBA,KAAM1B,EAAzB,EAAyBA,GAAzB,OAAkC,kBACrDyP,EAAQxK,KAAR,gBAAsBrD,EAAtB,YAAiCD,EAAjC,YAA0CD,EAA1C,mBAAyD1B,MAErD2X,EAAc,kBAAM5U,OAAO6U,SAAS,CAAElF,IAAK,EAAGmF,SAAU,YAzBzC,4CA2BrB,WAA0BhB,EAAmBjV,GAA7C,SAAAH,EAAA,8DACEoV,GADF,qCAC8B/V,EAAOmD,sBAAsBrC,GAAS,GADpE,OAEEd,EAAO0W,oBAFT,4CA3BqB,sBAgCrB,OACE,eAACrH,GAAA,EAAD,CAAKjB,UAAWN,EAAQ8E,UAAxB,UACE,cAACoE,GAAA,EAAD,CACE/D,MAAM,UACN7E,UAAWN,EAAQ4H,OACnBnB,QAAS,kBAAM5F,EAAQxK,KAAK,MAH9B,SAKE,cAAC8S,GAAA,EAAD,CAAWC,SAAS,YAEtB,cAACzF,GAAA,EAAD,CAAYC,QAAQ,KAAKe,MAAM,SAA/B,gBACG3I,QADH,IACGA,OADH,EACGA,EAAQhJ,UAEX,cAACuO,GAAA,EAAD,CAAKjB,UAAWN,EAAQT,QAAxB,SACG0I,EACC,cAAC1H,GAAA,EAAD,IAEA,cAACgB,GAAA,EAAD,UACKrP,EAAOA,OAAOyF,OACfzF,EAAOyD,OAAO1E,KAAI,SAACkC,EAAMwD,EAAO0S,GAAd,OAChB,cAAChC,GAAD,CAEEC,OAAQA,EACRC,OAAQ5Q,IAAU0S,EAAM1R,OAAS,EACjC8O,QAAS3E,EAAa,CACpBhP,KAAI,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAML,KACZC,MAAK,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAMJ,MACbC,QAAO,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAMH,QACf5B,GAAE,OAAE+B,QAAF,IAAEA,OAAF,EAAEA,EAAM/B,KAEZ+B,KAAMA,GAVR,OACOA,QADP,IACOA,OADP,EACOA,EAAM/B,OAaf,oCACIc,EAAO6C,YACP,eAAC4O,GAAA,EAAD,CAAYC,QAAQ,KAAKe,MAAM,SAASQ,MAAM,gBAA9C,+CACqCnJ,EAAOhJ,iBASxD,cAACsW,GAAA,EAAD,CAAKnE,MAAM,UAAU7E,UAAWN,EAAQ+G,IAAKN,QAASsC,EAAtD,SACE,cAAC,KAAD,MAED7W,EAAO6C,YAAc,cAACwL,GAAA,EAAD,U,kGE/FtBlB,GAAYC,YAAW,CAC3BwF,UAAW,CACTjF,OAAQ,SACRD,QAAS,GACTJ,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ3E,SAAU,YAEZwE,QAAS,CACPyC,MAAO,QAETuH,eAAgB,CACd/J,QAAS,OACTE,WAAY,SACZD,eAAgB,eAChBuC,MAAO,QAETuC,YAAa,CACXF,OAAQ,IACR7E,QAAS,QACT8E,aAAc,IAEhBnR,KAAM,CACJqM,QAAS,OACTE,WAAY,SACZD,eAAgB,aAChBI,OAAQ,UAEV2J,KAAM,CACJzO,SAAU,QACV+K,OAAQ,EACR+B,KAAM,GACN/D,IAAK,IAEPM,KAAM,CACJE,aAAc,GACd9E,QAAS,QACT6E,OAAQ,IAEVoF,gBAAiB,CACfjK,QAAS,QACT6E,OAAQ,IAEV7F,YAAa,CACXgB,QAAS,OACTE,WAAY,SACZD,eAAgB,cAElBxO,IAAK,CAAEoT,OAAQ,IAAKrC,MAAO,KAC3B0H,aAAc,CACZ7J,OAAQ,UAEV8J,cAAe,CACbnK,QAAS,OACTC,eAAgB,eAChBC,WAAY,UAEdkK,KAAM,CACJpK,QAAS,OACTyE,cAAe,SACfvE,WAAY,cAIVmK,GAAcC,KAAE1F,KAAK,CACzB2F,QAAS3F,KACT4F,UAAWC,KACXC,WAAY,CAAC,GAAI,MAGnBJ,KAAEK,OAAOC,UAAUC,QAAQjG,KAAOyF,GAsKnB/J,oBApKf,WACE,MAAgCiB,oBAAS,GAAzC,mBAAOuJ,EAAP,KAAiBC,EAAjB,KACQrY,EAAW6N,qBAAW/B,GAAtB9L,OACF8N,EAAUX,KAEhB,EAMInN,EAAO8C,aAAe,CAAEiL,QAAS,GAAI8H,SAAU,IALjDjV,EADF,EACEA,KACAE,EAFF,EAEEA,QACAD,EAHF,EAGEA,MACYwH,EAJd,EAIEwN,SAAYxN,YAJd,IAKE0F,QAAWvB,EALb,EAKaA,QAASK,EALtB,EAKsBA,UAGhBmB,EAAQ5B,EAAQ,OAACI,QAAD,IAACA,OAAD,EAACA,EAASyB,GAAV,OAAczB,QAAd,IAAcA,OAAd,EAAcA,EAAS0B,IAEvCS,EAAUC,cACViH,EAAWC,cACXhM,EAAS8L,cAEPrU,EAAWgL,mBAAQ,kBjBhFf,QADkB+L,EiBiFkB,OAACzC,QAAD,IAACA,OAAD,EAACA,EAAUvC,cjBhF/C,IAAZgF,OAAA,EAAAA,EACIC,QAAQ,IAAK,IACdC,MAAM,KACNC,QAAO,SAACC,EAAoBC,GAC3B,aAAqBA,QAArB,IAAqBA,OAArB,EAAqBA,EAAOH,MAAM,KAAlC,mBAAOnW,EAAP,KAAYC,EAAZ,KAEA,OADAoW,EAAmBrW,GAAOC,EACnBoW,IACN,MAAO,GARiB,IAACJ,IiBiFsC,QAClEzC,QADkE,IAClEA,OADkE,EAClEA,EAAUvC,SADJ/R,OAIFpB,EAAWoM,mBAAQ,kBAAM6L,GAAYpY,EAAOG,WAAU,CAC1DiY,EACApY,EAAOG,WAzBS,4CAoClB,WAAwBoB,EAAQT,EAASiC,GAAzC,SAAApC,EAAA,8DACEG,IAAYiC,GADd,qCAEWkE,QAAQtH,QAAQK,EAAOmD,sBAAsBrC,GAAS,IAFjE,OAGEd,EAAO4Y,gBAAgB3H,OAAO1P,IAHhC,4CApCkB,sBA4BlB6N,qBAAU,YA5BQ,wCA6BhByJ,CAAStX,EAAQuI,EAAOhJ,QAASd,EAAO+C,kBACvC,CAACxB,EAAQuI,EAAOhJ,QAASd,EAAO+C,iBAEnCqM,qBAAU,WACRiJ,GAAY,KACX,IAQH,MAAmBhU,MAAMC,QAAQ+D,GAAeA,EAAc,GAA9D,mBAAOF,EAAP,KAAYC,EAAZ,KAEA,OACE,qCACE,cAAC4O,GAAA,EAAD,CACE/D,MAAM,UACN7E,UAAWN,EAAQwJ,KACnB/C,QAAS,kBAAM5F,EAAQmK,UAHzB,SAKE,cAACC,GAAA,EAAD,CAAgB7B,SAAS,YAE3B,cAAC5B,GAAA,EAAD,CAAMlH,UAAWN,EAAQ8E,UAAzB,SACIzS,EAGA,eAACkP,GAAA,EAAD,CAAKjB,UAAWN,EAAQT,QAAxB,UACE,eAACgC,GAAA,EAAD,CAAKjB,UAAWN,EAAQuJ,eAAxB,UACE,qBACEjJ,UAAWN,EAAQuE,YACnBU,IAAI,eACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOxB,UAEd,eAAC6C,GAAA,EAAD,WACE,cAACoC,GAAA,EAAD,CAAYgB,MAAM,SAASC,WAAS,EAAChB,QAAQ,KAA7C,SACG9Q,IAEH,cAAC6Q,GAAA,EAAD,CACEgB,MAAM,SACNf,QAAQ,YACRuB,MAAM,gBAHR,SAKGpS,IAEH,cAAC4Q,GAAA,EAAD,CAAYgB,MAAM,SAASf,QAAQ,YAAnC,SACG5Q,OAGL,eAACuO,GAAA,EAAD,CAAKjB,UAAWN,EAAQ4J,KAAxB,UACE,eAACrI,GAAA,EAAD,CAAKjB,UAAWN,EAAQxB,YAAxB,UACE,qBACE8B,UAAWN,EAAQyJ,gBACnBxE,IAAI,mBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAO1B,cAEd,eAACmF,GAAA,EAAD,CAAYwB,MAAM,UAAUvB,QAAQ,KAApC,iBACGlF,QADH,IACGA,OADH,EACGA,EAAS0B,GADZ,eAIF,cAACqC,GAAD,UAGJ,eAAClB,GAAA,EAAD,CAAKjB,UAAWN,EAAQ2J,cAAxB,UACGpP,GACC,cAACgH,GAAA,EAAD,CAAKjB,UAAWN,EAAQ0J,aAAxB,SACE,eAACwB,GAAA,EAAD,CACE5K,UAAWN,EAAQ/O,IACnBka,OAAQ,CAAC7Q,EAAKD,GACd+Q,KAAM,EACNC,iBAAiB,EAJnB,UAME,cAACC,GAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACrB,GAAA,EAAD,CAAQpP,SAAU,CAACT,EAAKD,GAAxB,SACE,eAACoR,GAAA,EAAD,mCACuB,uBADvB,kCAOR,eAAClK,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,CAAKjB,UAAWN,EAAQ7M,KAAxB,UACE,qBACEmN,UAAWN,EAAQoE,KACnBa,IAAI,qBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOnB,YAEd,eAAC4E,GAAA,EAAD,CAAYC,QAAQ,KAAKuB,MAAM,gBAA/B,iBACGpG,QADH,IACGA,OADH,EACGA,EAAWwG,MADd,aAIF,eAAChE,GAAA,EAAD,CAAKjB,UAAWN,EAAQ7M,KAAxB,UACE,qBACEmN,UAAWN,EAAQoE,KACnBa,IAAI,gBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOrB,WAEd,eAAC8E,GAAA,EAAD,CAAYC,QAAQ,KAAKuB,MAAM,gBAA/B,iBACGzG,QADH,IACGA,OADH,EACGA,EAAS0G,GADZ,WAIF,eAAC7D,GAAA,EAAD,CAAKjB,UAAWN,EAAQ7M,KAAxB,UACE,qBACEmN,UAAWN,EAAQoE,KACnBa,IAAI,oBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOjB,WAEd,eAAC0E,GAAA,EAAD,CAAYC,QAAQ,KAAKuB,MAAM,gBAA/B,iBACGzG,QADH,IACGA,OADH,EACGA,EAAS2G,GADZ,aAIF,eAAC9D,GAAA,EAAD,CAAKjB,UAAWN,EAAQ7M,KAAxB,UACE,qBACEmN,UAAWN,EAAQoE,KACnBa,IAAI,kBACJC,IAAG,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAOpB,OAEd,eAAC6E,GAAA,EAAD,CAAYC,QAAQ,KAAKuB,MAAM,gBAA/B,iBACGzG,QADH,IACGA,OADH,EACGA,EAAS4G,GADZ,sBAhGR,cAAC/E,GAAA,EAAD,YCrJK,SAASmL,KACtB,OAAO,cAAC,IAAD,CAAUlU,GAAG,MCDP,SAASmU,GAAW3N,GACjC,IAAM9J,EAAQ6L,qBAAW/B,GAEzB,EAAgC+C,mBAC9B7M,EAAMJ,aAAazB,UACjB6B,EAAMwF,UAAUrH,UAChB6B,EAAMhC,OAAOG,UACb6B,EAAM6J,YAAY1L,UAJtB,mBAAOA,EAAP,KAAiBmJ,EAAjB,KAOMoQ,ECXO,SAAqBpX,GAClC,IAAMiT,EAAM5E,mBAMZ,OAJAvB,qBAAU,WACRmG,EAAIxH,QAAUzL,IACb,CAACA,IAEGiT,EAAIxH,QDIa4L,CAAY3X,EAAMJ,aAAayG,aASvD,OAPA+G,qBAAU,WACHjP,GAAYuZ,IAAoB1X,EAAMJ,aAAayG,e,qCACtDwQ,CAAS,eAAK7W,IACdsH,GAAY,MAEb,CAACnJ,EAAU6B,EAAMJ,aAAayG,cAE1BlI,E,8CAET,uCAAAQ,EAAA,6DAA0BiB,EAA1B,EAA0BA,aAAc4F,EAAxC,EAAwCA,UAAWqE,EAAnD,EAAmDA,YAAa7L,EAAhE,EAAgEA,OAAhE,SACQiH,QAAQtH,QAAR,OAAgBiC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAcD,cAAa,IADnD,uBAEQsF,QAAQtH,QAAR,OAAgB6H,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAWC,kBAFnC,uBAGQR,QAAQtH,QAAR,OAAgBK,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAQmD,sBAAR,OAA8BvB,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAcd,UAHpE,cAKQS,EALR,OAKiBvB,QALjB,IAKiBA,GALjB,UAKiBA,EAAQA,OAAOwE,MAC5B,SAAC5D,GAAD,OACM,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMA,SAAN,OAAegB,QAAf,IAAeA,OAAf,EAAeA,EAAc0G,YACzB,OAAJ1H,QAAI,IAAJA,OAAA,EAAAA,EAAMC,UAAN,OAAgBe,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAc2G,kBARpC,aAKiB,EAIZrJ,GATL,UAWQ+H,QAAQtH,QAAR,OAAgBkM,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAa+N,sBAAsBrY,IAX3D,6C,sBEfeqM,oBALf,YAAsC,IAAb1B,EAAY,EAAZA,SACjB/L,EAAWsZ,GAAW3N,GAC5B,OAAO,mCAAG3L,EAAW,8BAAM+L,IAAkB,kDCEhC,SAAS2N,GAAT,GAAmC,IAAb3N,EAAY,EAAZA,SACnC,OACE,cAAC,IAAD,UACE,eAAC,GAAD,WACGA,EACD,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4N,KAAK,IAAIC,OAAK,EAACC,UAAWjG,KACjC,cAAC,IAAD,CAAO+F,KAAK,oBAAoBE,UAAWC,KAC3C,cAAC,IAAD,CAAOH,KAAK,8BAA8BE,UAAWE,KACrD,cAAC,IAAD,CAAOF,UAAWR,a,cCHbW,OAVf,WACE,OACE,cAAC,EAAD,UACE,cAACC,GAAA,EAAD,CAAWhM,UAAU,MAArB,SACE,cAACyL,GAAD,SCIOQ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrT,MAAK,YAAkD,IAA/CsT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M,gCChBA,OAAe,cAA0B,sC,gCCAzC,OAAe,cAA0B,mC,gCCAzC,OAAe,cAA0B,uC,gCCAzC,OAAe,cAA0B,iC,gCCAzC,OAAe,cAA0B,uC","file":"static/js/main.31107255.chunk.js","sourcesContent":["var map = {\n\t\"./01d.svg\": 140,\n\t\"./01n.svg\": 141,\n\t\"./02d.svg\": 142,\n\t\"./02n.svg\": 143,\n\t\"./03d.svg\": 144,\n\t\"./03n.svg\": 145,\n\t\"./04d.svg\": 146,\n\t\"./04n.svg\": 147,\n\t\"./09d.svg\": 148,\n\t\"./10d.svg\": 149,\n\t\"./10n.svg\": 150,\n\t\"./11d.svg\": 151,\n\t\"./13d.svg\": 152,\n\t\"./50d.svg\": 153,\n\t\"./50n.svg\": 154,\n\t\"./cold.svg\": 155,\n\t\"./compass.svg\": 156,\n\t\"./hot.svg\": 157,\n\t\"./humidity.svg\": 73,\n\t\"./pin.svg\": 76,\n\t\"./pollution.svg\": 75,\n\t\"./pressure.svg\": 77,\n\t\"./storm.svg\": 158,\n\t\"./temperature.svg\": 159,\n\t\"./warm.svg\": 160,\n\t\"./windy.svg\": 74\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 139;","export default __webpack_public_path__ + \"static/media/01d.4eccead1.svg\";","export default __webpack_public_path__ + \"static/media/01n.27c17ca4.svg\";","export default __webpack_public_path__ + \"static/media/02d.0834d4ae.svg\";","export default __webpack_public_path__ + \"static/media/02n.bcb9f6c4.svg\";","export default __webpack_public_path__ + \"static/media/03d.fcffee55.svg\";","export default __webpack_public_path__ + \"static/media/03n.fcffee55.svg\";","export default __webpack_public_path__ + \"static/media/04d.09a2ccb9.svg\";","export default __webpack_public_path__ + \"static/media/04n.09a2ccb9.svg\";","export default __webpack_public_path__ + \"static/media/09d.b1c4d2b1.svg\";","export default __webpack_public_path__ + \"static/media/10d.767428d2.svg\";","export default __webpack_public_path__ + \"static/media/10n.53e902f6.svg\";","export default __webpack_public_path__ + \"static/media/11d.b98b90e2.svg\";","export default __webpack_public_path__ + \"static/media/13d.b349810c.svg\";","export default __webpack_public_path__ + \"static/media/50d.0d9f5d0f.svg\";","export default __webpack_public_path__ + \"static/media/50n.0d9f5d0f.svg\";","export default __webpack_public_path__ + \"static/media/cold.bb3f3a64.svg\";","export default __webpack_public_path__ + \"static/media/compass.17d02650.svg\";","export default __webpack_public_path__ + \"static/media/hot.49f0818b.svg\";","export default __webpack_public_path__ + \"static/media/storm.e07894e6.svg\";","export default __webpack_public_path__ + \"static/media/temperature.9c116125.svg\";","export default __webpack_public_path__ + \"static/media/warm.9c116125.svg\";","import {\r\n  makeObservable,\r\n  observable,\r\n  action,\r\n  computed,\r\n  runInAction,\r\n} from \"mobx\";\r\n\r\nexport default class CityWeatherStore {\r\n  weatherData = {};\r\n  isLoaded = false;\r\n  geoData;\r\n  api;\r\n  cities;\r\n\r\n  constructor({ geoData, cities, api }) {\r\n    this.api = api;\r\n    this.geoData = geoData;\r\n    this.cities = cities;\r\n    makeObservable(this, {\r\n      weatherData: observable,\r\n      isLoaded: observable,\r\n      fetchWeatherData: action.bound,\r\n      setWeatherData: action.bound,\r\n    });\r\n  }\r\n\r\n  setWeather(weatherData) {\r\n    return (this.weatherData = weatherData);\r\n  }\r\n\r\n  async fetchWeatherData({ city, state, country, id }) {\r\n    this.isLoaded = false;\r\n    const { status, data } =\r\n      (await this.api?.getDataForCity(city, state, country)) || {};\r\n    runInAction(() => {\r\n      if (this.api?.isSuccess(status)) {\r\n        const cityWithWeather = { ...data, id, isLoaded: true };\r\n        this.setWeather(cityWithWeather);\r\n        this.cities?.setLoadedCity(cityWithWeather, country);\r\n        this.isLoaded = true;\r\n      }\r\n      this.isLoaded = true;\r\n    });\r\n  }\r\n\r\n  setWeatherData(cityId) {\r\n    const cityData = this.cities?.findCity(cityId);\r\n    const { isLoaded, city, state, country, id } = cityData;\r\n    if (isLoaded) {\r\n      runInAction(() => {\r\n        this.setWeather(cityData);\r\n        this.cities?.setCurrentCityId(id);\r\n      });\r\n      return;\r\n    }\r\n    this.fetchWeatherData({ city, state, country, id });\r\n  }\r\n\r\n  async fetchLocalWeatherData(id) {\r\n    !this.geoData.isLoaded && (await this.geoData.fetchGeoData());\r\n    let { country, state, city } = this.geoData.localization;\r\n    if (!city) {\r\n      const { status, data } =\r\n        (await this.api?.getCitiesForState(country, state)) || {};\r\n      city = this.api?.isSuccess(status) ? data[0]?.city : city;\r\n    }\r\n    city && this.fetchWeatherData({ city, country, state, id });\r\n  }\r\n}\r\n","export const WEATHER_API_BASE_URL = \"https://api.airvisual.com/v2\";\r\n\r\nexport const WEATHER_API_KEYS = [\r\n  \"b7eb833a-98a7-4fe4-bbda-bb6a14f6dc1d\",\r\n  \"d9509582-9037-4161-a64a-36b937383002\",\r\n  \"4cf748f7-a304-458a-882e-a8199762b5a2\",\r\n  \"f3ea14a7-e49d-4dbb-a423-6c53450c795e\",\r\n  \"402fd72e-367e-49c1-8245-865a860e4c12\",\r\n  \"67755a39-746c-423e-b677-86b4581ea3f9\",\r\n  \"f2647f3a-2d5c-480f-a75c-d0808a20a1a5\",\r\n  \"d08400d1-9bd3-4fcc-a474-08732fecfb77\",\r\n];\r\n\r\nexport const GEOCODER_API_BASE_URL = \"http://api.positionstack.com/v1\";\r\n\r\nexport const GEOCODER_API_KEY = \"e452d31bada2d23e9877efc5aec49a85\";\r\n\r\nexport const HOUR = 60 * 60 * 1000;\r\n","export default class LocalStorage {\r\n  static saveStore(store) {\r\n    window?.localStorage &&\r\n      Object.entries(store).forEach(([key, value]) =>\r\n        window.localStorage.setItem(key, JSON.stringify(value))\r\n      );\r\n  }\r\n\r\n  static getStore(key) {\r\n    return window?.localStorage && JSON.parse(window.localStorage.getItem(key));\r\n  }\r\n}\r\n","import {\r\n  makeObservable,\r\n  observable,\r\n  action,\r\n  computed,\r\n  runInAction,\r\n} from \"mobx\";\r\n\r\nimport { HOUR } from \"../../static\";\r\n\r\nimport LocalStorage from \"../../services/LocalStorage\";\r\n\r\nexport default class CountryCitiesStore {\r\n  country = \"\";\r\n  cities = [];\r\n  isLoaded = false;\r\n  isFetching = false;\r\n  currentCity = null;\r\n  currentCountry = null;\r\n  filter = \"\";\r\n  api;\r\n  offset = 0;\r\n  limit = 5;\r\n  constructor(api) {\r\n    this.api = api;\r\n    makeObservable(this, {\r\n      country: observable,\r\n      isLoaded: observable,\r\n      isFetching: observable,\r\n      cities: observable,\r\n      filter: observable,\r\n      currentCity: observable,\r\n      currentCountry: observable,\r\n      fetchCitiesForCountry: action.bound,\r\n      setFilter: action.bound,\r\n      setLoadedCity: action.bound,\r\n      setCurrentCity: action.bound,\r\n      filtered: computed,\r\n      sorted: computed,\r\n      loaded: computed,\r\n    });\r\n    this.initStorage();\r\n  }\r\n\r\n  get sorted() {\r\n    return [...this.cities].sort((a, b) => (a?.city < b?.city ? -1 : 1));\r\n  }\r\n\r\n  get filtered() {\r\n    const lowerCaseFilter = this.filter?.toLowerCase();\r\n    return this.cities\r\n      .filter((item) => item?.city?.toLowerCase()?.includes(lowerCaseFilter))\r\n      .sort(\r\n        (a, b) =>\r\n          a?.city?.toLowerCase()?.indexOf(lowerCaseFilter) -\r\n          b?.city?.toLowerCase()?.indexOf(lowerCaseFilter)\r\n      );\r\n  }\r\n\r\n  get loaded() {\r\n    const loadedCities = [];\r\n    for (const city of this.cities) {\r\n      if (!city.isLoaded) {\r\n        return loadedCities;\r\n      }\r\n      loadedCities.push(city);\r\n    }\r\n    return loadedCities;\r\n  }\r\n\r\n  setFilter(filter) {\r\n    return (this.filter = String(filter));\r\n  }\r\n\r\n  setCities(cities) {\r\n    return (this.cities = Array.isArray(cities) ? cities : [cities]);\r\n  }\r\n\r\n  setCurrentCity(city) {\r\n    return (this.currentCity = city);\r\n  }\r\n\r\n  setCurrentCountry(country) {\r\n    return (this.currentCountry = country);\r\n  }\r\n\r\n  async loadCityWeather(cityId) {\r\n    let loadedCityIndex;\r\n    const loadedCity =\r\n      this.cities.find((city, index) => {\r\n        const isFound = city.id === cityId;\r\n        if (isFound) {\r\n          loadedCityIndex = index;\r\n        }\r\n        return isFound;\r\n      }) || {};\r\n\r\n    if (loadedCityIndex === undefined) {\r\n      return;\r\n    }\r\n\r\n    const { isLoaded, city, state, country } = loadedCity;\r\n\r\n    if (isLoaded) {\r\n      runInAction(() => {\r\n        this.setCurrentCity(loadedCity);\r\n        this.isLoaded = true;\r\n      });\r\n      return;\r\n    }\r\n\r\n    const { status, data } = await this.api?.getDataForCity(\r\n      city,\r\n      state,\r\n      country\r\n    );\r\n\r\n    if (this.api?.isSuccess(status)) {\r\n      const cities = [...this.cities];\r\n      cities[loadedCityIndex] = { ...data, id: cityId, isLoaded: true };\r\n      runInAction(() => {\r\n        this.setCities(cities);\r\n        this.setCurrentCity(this.cities[loadedCityIndex]);\r\n        this.isLoaded = true;\r\n      });\r\n      this.setCitiesWeatherToStorage(this.cities, country, true);\r\n    }\r\n  }\r\n\r\n  async loadCitiesWeather(country = this.currentCountry) {\r\n    const fetched = LocalStorage.getStore(\"fetched\");\r\n    const { fullyFetchedQuantity, timestamp } = fetched[country] || {};\r\n\r\n    const now = Date.now();\r\n\r\n    const timeIsUp = now - timestamp > 3 * HOUR;\r\n\r\n    if (timeIsUp) {\r\n      this.offset = 0;\r\n    }\r\n\r\n    const to = this.offset + this.limit;\r\n\r\n    const citiesToFetch = this.cities.slice(this.offset, to);\r\n\r\n    if (!citiesToFetch?.length) {\r\n      return;\r\n    }\r\n\r\n    runInAction(() => {\r\n      this.isFetching = true;\r\n    });\r\n\r\n    const shouldFetch = (fullyFetchedQuantity ?? 0) < to || timeIsUp;\r\n\r\n    const citiesWeather = shouldFetch\r\n      ? await this.api?.getWeatherForCities(citiesToFetch)\r\n      : this.getCitiesFromStorage(country);\r\n\r\n    const cities = [...this.cities];\r\n\r\n    citiesWeather?.forEach((city) => {\r\n      if (cities[city.id]) {\r\n        cities[city.id] = city;\r\n      }\r\n    });\r\n\r\n    if (shouldFetch) {\r\n      LocalStorage.saveStore({\r\n        fetched: {\r\n          ...fetched,\r\n          [country]: {\r\n            timestamp: !timestamp || timeIsUp ? now : timestamp,\r\n            fullyFetchedQuantity: to,\r\n          },\r\n        },\r\n      });\r\n      this.setCitiesWeatherToStorage(cities, country, true);\r\n    }\r\n\r\n    runInAction(() => {\r\n      this.setCities(cities);\r\n      this.isFetching = false;\r\n      this.offset = to;\r\n    });\r\n  }\r\n\r\n  findCity(cityId) {\r\n    return this.cities.find(({ id }) => id === cityId);\r\n  }\r\n\r\n  filterByName(cityName) {\r\n    return this.cities.filter((city) => city.name === cityName);\r\n  }\r\n\r\n  filterByState(cityState) {\r\n    return this.cities.filter((city) => city.state === cityState);\r\n  }\r\n\r\n  getLoaded(isLoaded = true) {\r\n    return this.cities.filter((city) => city.isLoaded === isLoaded);\r\n  }\r\n\r\n  checkIsWeatherLoaded(cityId) {\r\n    return !!this.cities.find((city) => city.id === cityId)?.isLoaded;\r\n  }\r\n\r\n  setLoadedCity(city, country) {\r\n    if (!city?.id) {\r\n      return;\r\n    }\r\n    const cities = [...this.cities];\r\n    if (cities[city.id]) {\r\n      cities[city.id] = city;\r\n    }\r\n    this.setCitiesWeatherToStorage(cities, country, true);\r\n    this.setCities(cities);\r\n  }\r\n\r\n  async fetchCitiesForCountry(country, reLoad = false) {\r\n    if (this.isLoaded && !reLoad) {\r\n      return;\r\n    }\r\n\r\n    const timeIsUp = this.handleTimeUp(country);\r\n\r\n    this.isLoaded = false;\r\n    const citiesFromStorage = this.getFromStorage(country);\r\n    const shouldFetch = timeIsUp || !citiesFromStorage?.length;\r\n\r\n    const cities = shouldFetch\r\n      ? await this.api?.getCities(country)\r\n      : citiesFromStorage;\r\n\r\n    runInAction(() => {\r\n      this.setCities(cities);\r\n      this.isLoaded = true;\r\n      this.offset = 0;\r\n      this.limit = 5;\r\n      this.setCurrentCountry(country);\r\n    });\r\n\r\n    shouldFetch && this.saveToStorage(cities, country);\r\n  }\r\n\r\n  handleTimeUp(country) {\r\n    const fetched = LocalStorage.getStore(\"fetched\");\r\n    const { timestamp } = fetched[country] || {};\r\n\r\n    const now = Date.now();\r\n\r\n    return now - timestamp > 3 * HOUR;\r\n  }\r\n\r\n  initStorage() {\r\n    LocalStorage.getStore(\"cities\") || LocalStorage.saveStore({ cities: {} });\r\n    LocalStorage.getStore(\"fetched\") || LocalStorage.saveStore({ fetched: {} });\r\n  }\r\n\r\n  getCitiesFromStorage(country) {\r\n    return LocalStorage.getStore(\"cities\")[country]?.slice(\r\n      this.offset,\r\n      this.limit + this.offset\r\n    );\r\n  }\r\n\r\n  getFromStorage(country) {\r\n    const citiesStorage = LocalStorage.getStore(\"cities\");\r\n    return citiesStorage && LocalStorage.getStore(\"cities\")[country];\r\n  }\r\n\r\n  saveToStorage(cities, country, override = false) {\r\n    const citiesFromStorage = LocalStorage.getStore(\"cities\");\r\n    if (citiesFromStorage[country]?.length && !override) {\r\n      return;\r\n    }\r\n    LocalStorage.saveStore({\r\n      cities: { ...citiesFromStorage, [country]: cities },\r\n    });\r\n  }\r\n\r\n  setCitiesWeatherToStorage(cities, country, isAll = false) {\r\n    if (isAll) {\r\n      this.saveToStorage(cities, country, true);\r\n      return;\r\n    }\r\n    const citiesFromStorage = this.getFromStorage(country);\r\n    const updatedCities = Array.isArray(citiesFromStorage)\r\n      ? [...citiesFromStorage]\r\n      : [];\r\n    cities?.forEach((city) => {\r\n      let foundIndex;\r\n      const foundCity = citiesFromStorage?.find(({ id, isLoaded }, index) => {\r\n        const isFound = !isLoaded && id && id === city?.id;\r\n        if (isFound) {\r\n          foundIndex = index;\r\n        }\r\n        return isFound;\r\n      });\r\n      if (foundCity) {\r\n        updatedCities[foundIndex] = { ...updatedCities[foundIndex], ...city };\r\n      }\r\n    });\r\n\r\n    this.saveToStorage(updatedCities, country, true);\r\n    return updatedCities;\r\n  }\r\n}\r\n","export const handleAsync = (promise, defaultValue, action) => {\r\n  action?.();\r\n  return handleError(\r\n    Promise.resolve(promise)\r\n      .then((data) => [data, undefined])\r\n      .catch((error) => Promise.resolve([undefined, error])),\r\n    defaultValue\r\n  );\r\n};\r\n\r\nexport const getFilteredMatches = (filter, collection) => {\r\n  const lowerCaseFilter = filter?.toLowerCase();\r\n  return collection\r\n    .filter((item) => item?.toLowerCase()?.includes(lowerCaseFilter))\r\n    .sort(\r\n      (a, b) =>\r\n        a?.toLowerCase()?.indexOf(lowerCaseFilter) -\r\n        b?.toLowerCase()?.indexOf(lowerCaseFilter)\r\n    );\r\n};\r\n\r\nexport async function handleError(promise, defaultValue) {\r\n  const [value, error] = await promise;\r\n  if (error) {\r\n    console.error(error);\r\n    return defaultValue;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const isFunction = (value) => typeof value === \"function\";\r\n\r\nexport const matchPrefix = (prefix) => (matchIf) => (value) =>\r\n  `${matchIf(value) ? prefix : \"\"}${value}`;\r\n\r\nexport const getSearchParams = (searchString) =>\r\n  searchString\r\n    ?.replace(\"?\", \"\")\r\n    .split(\"&\")\r\n    .reduce((searchParamsObject, param) => {\r\n      const [key, value] = param?.split(\"=\");\r\n      searchParamsObject[key] = value;\r\n      return searchParamsObject;\r\n    }, {}) || {};\r\n","import {\r\n  makeObservable,\r\n  observable,\r\n  action,\r\n  computed,\r\n  runInAction,\r\n} from \"mobx\";\r\n\r\nimport { getFilteredMatches } from \"../../utils\";\r\n\r\nimport LocalStorage from \"../../services/LocalStorage\";\r\n\r\nexport default class SupportedCountriesStore {\r\n  isLoaded = false;\r\n  filter = \"\";\r\n  countries = [];\r\n  api;\r\n\r\n  constructor(api) {\r\n    makeObservable(this, {\r\n      isLoaded: observable,\r\n      countries: observable,\r\n      filter: observable,\r\n      setFilter: action.bound,\r\n      filtered: computed,\r\n      sorted: computed,\r\n      fetchCountries: action.bound,\r\n    });\r\n    this.api = api;\r\n    this.initStorage();\r\n  }\r\n\r\n  setCountries(countires) {\r\n    return (this.countries = Array.isArray(countires)\r\n      ? countires\r\n      : [countires]);\r\n  }\r\n\r\n  setFilter(filter) {\r\n    return (this.filter = String(filter));\r\n  }\r\n\r\n  findCountry(countryName) {\r\n    return this.countries.find((country) => country === countryName);\r\n  }\r\n\r\n  get filtered() {\r\n    return getFilteredMatches(this.filter, this.countries);\r\n  }\r\n\r\n  get sorted() {\r\n    return [...this.countries].sort();\r\n  }\r\n\r\n  async fetchCountries() {\r\n    if (this.isLoaded) {\r\n      return;\r\n    }\r\n    const countriesFromStorage = LocalStorage.getStore(\"countries\");\r\n    const shouldFetch = !countriesFromStorage?.data?.length;\r\n    const { data, status } =\r\n      (shouldFetch\r\n        ? await this.api?.getSupportedCountries()\r\n        : countriesFromStorage) || {};\r\n    const countries = data?.map(({ country }) => country);\r\n    shouldFetch && LocalStorage.saveStore({ countries: { data, status } });\r\n    runInAction(() => {\r\n      this.api?.isSuccess(status) && this.setCountries(countries);\r\n      this.isLoaded = true;\r\n    });\r\n  }\r\n\r\n  initStorage() {\r\n    LocalStorage.getStore(\"countries\") ||\r\n      LocalStorage.saveStore({ countries: {} });\r\n  }\r\n}\r\n","import {\r\n  makeObservable,\r\n  observable,\r\n  action,\r\n  computed,\r\n  runInAction,\r\n} from \"mobx\";\r\n\r\nexport default class GeoDataStore {\r\n  coordinates = { lat: null, lon: null };\r\n  locality = \"\";\r\n  country = \"\";\r\n  region = \"\";\r\n  isLoaded = false;\r\n  geocodeService;\r\n\r\n  constructor(geocodeService, { lat, lon } = {}) {\r\n    this.geocodeService = geocodeService;\r\n\r\n    makeObservable(this, {\r\n      coordinates: observable,\r\n      locality: observable,\r\n      country: observable,\r\n      region: observable,\r\n      isLoaded: observable,\r\n      localization: computed,\r\n      fetchGeoData: action.bound,\r\n    });\r\n\r\n    (lat && lon) !== undefined\r\n      ? this.setCoordinates({ lat, lon })\r\n      : this.getDeviceCoordinates();\r\n  }\r\n\r\n  setCoordinates({ lat, lon } = {}) {\r\n    return (this.coordinates = { lat, lon });\r\n  }\r\n\r\n  setIsLoaded(isLoaded) {\r\n    return (this.isLoaded = isLoaded);\r\n  }\r\n\r\n  setLocality(locality) {\r\n    return (this.locality = locality);\r\n  }\r\n\r\n  setCountry(country) {\r\n    return (this.country = country);\r\n  }\r\n\r\n  setRegion(region) {\r\n    return (this.region = region);\r\n  }\r\n\r\n  getDeviceCoordinates() {\r\n    navigator &&\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const { latitude: lat, longitude: lon } = position.coords || {};\r\n        this.setCoordinates({ lat, lon });\r\n      });\r\n  }\r\n\r\n  get localization() {\r\n    return {\r\n      lat: this.coordinates.lat,\r\n      lon: this.coordinates.lon,\r\n      city: this.locality,\r\n      country: this.country,\r\n      state: this.region,\r\n    };\r\n  }\r\n\r\n  async fetchGeoData(reload = false) {\r\n    if (this.isLoaded && !reload) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      coordinates: { lat, lon },\r\n    } = this;\r\n    const { locality, country, region, coords } =\r\n      (await this.geocodeService?.getGeoData({ lat, lon })) || {};\r\n\r\n    runInAction(() => {\r\n      locality && this.setLocality(locality);\r\n      country && this.setCountry(country);\r\n      region && this.setRegion(region);\r\n      coords && this.setCoordinates(coords);\r\n      this.setIsLoaded(true);\r\n    });\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  WEATHER_API_BASE_URL as baseUrl,\r\n  WEATHER_API_KEYS as keys,\r\n} from \"../../static\";\r\nimport { handleAsync } from \"../../utils\";\r\n\r\nconst headers = {\r\n  // \"Access-Control-Allow-Origin\": baseUrl,\r\n  Accept: \"*/*\",\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nexport class WeatherApi {\r\n  baseUrl = \"\";\r\n  keys = \"\";\r\n  requestsQuantity = 0;\r\n  geocodeService;\r\n\r\n  constructor({ baseUrl, keys } = {}) {\r\n    this.baseUrl = baseUrl ?? this.baseUrl;\r\n    this.keys = keys ?? this.keys;\r\n    this._resetRequestsQuantity();\r\n  }\r\n\r\n  async getSupportedCountries() {\r\n    const response = await handleAsync(\r\n      axios.get(`${this.baseUrl}/countries`, {\r\n        params: { key: this._getKey() },\r\n        headers,\r\n      }),\r\n      this.incrementRequestsQuantity()\r\n    );\r\n\r\n    return response?.data;\r\n  }\r\n\r\n  async getSupportedStatesForCountry(country) {\r\n    const response = await handleAsync(\r\n      axios.get(`${this.baseUrl}/states`, {\r\n        params: { country, key: this._getKey() },\r\n        headers,\r\n      }),\r\n      this.incrementRequestsQuantity()\r\n    );\r\n\r\n    return response?.data;\r\n  }\r\n\r\n  async getCitiesForState(country, state) {\r\n    const response = await handleAsync(\r\n      axios.get(`${this.baseUrl}/cities`, {\r\n        params: {\r\n          country,\r\n          state,\r\n          key: this._getKey(),\r\n        },\r\n        headers,\r\n      }),\r\n      this.incrementRequestsQuantity()\r\n    );\r\n\r\n    const { data, status } = response?.data || {};\r\n\r\n    return this.isSuccess(status)\r\n      ? data?.map(({ city }) => ({ city, country, state }))\r\n      : [];\r\n  }\r\n\r\n  async getCities(country) {\r\n    const { status, data: states } =\r\n      (await this.getSupportedStatesForCountry(country)) || {};\r\n\r\n    if (!this.isSuccess(status)) {\r\n      return await Promise.resolve([]);\r\n    }\r\n\r\n    const cities = await Promise.all(\r\n      states.map((state) => this.getCitiesForState(country, state?.state))\r\n    ).catch((error) => console.error(error));\r\n\r\n    return WeatherApi.mapCities(WeatherApi.flatCities(cities));\r\n  }\r\n\r\n  async getDataForCity(city, state, country) {\r\n    const response = await handleAsync(\r\n      axios.get(`${this.baseUrl}/city`, {\r\n        params: { city, country, state, key: this._getKey() },\r\n        headers,\r\n      }),\r\n      this.incrementRequestsQuantity()\r\n    );\r\n\r\n    return await response?.data;\r\n  }\r\n\r\n  async getWeatherForCities(citiesData) {\r\n    const citiesWeather = await Promise.all(\r\n      citiesData.map(async (cityData) => {\r\n        const { city, state, country } = cityData;\r\n\r\n        const response = await this.getDataForCity(city, state, country);\r\n\r\n        return this.mapResponse({ ...response }, cityData);\r\n      })\r\n    ).catch((error) => console.error(error));\r\n\r\n    return citiesWeather;\r\n  }\r\n\r\n  incrementRequestsQuantity() {\r\n    this.requestsQuantity++;\r\n  }\r\n\r\n  _resetRequestsQuantity(interval = 60000) {\r\n    setInterval(() => (this._resetRequestsQuantity = 0), interval);\r\n  }\r\n\r\n  _getKey() {\r\n    return this.keys[this.requestsQuantity % this.keys.length];\r\n  }\r\n\r\n  async getDataForLocalization({ lat, lon } = {}) {\r\n    const params =\r\n      (lat && lon) !== undefined\r\n        ? { key: this._getKey(), lat, lon }\r\n        : { key: this._getKey() };\r\n    const response = await handleAsync(\r\n      axios.get(`${this.baseUrl}/nearest_station`, { params }),\r\n      this.incrementRequestsQuantity()\r\n    );\r\n\r\n    return response?.data;\r\n  }\r\n\r\n  isSuccess(status) {\r\n    return /^success$/.test(status);\r\n  }\r\n\r\n  static mapCities(cities) {\r\n    return cities.map((city, id) => ({\r\n      ...city,\r\n      id,\r\n      isLoaded: false,\r\n    }));\r\n  }\r\n\r\n  static withTimeout(callback, timeout) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => resolve(callback()), timeout);\r\n    });\r\n  }\r\n\r\n  static flatCities(cities) {\r\n    return (Array.isArray(cities) ? cities : [cities]).flat();\r\n  }\r\n\r\n  mapResponse({ data, status }, cityData) {\r\n    return this.isSuccess(status) && data\r\n      ? { ...cityData, ...data, isLoaded: true }\r\n      : { ...cityData };\r\n  }\r\n}\r\n\r\nexport default new WeatherApi({\r\n  baseUrl,\r\n  keys,\r\n});\r\n","import axios from \"axios\";\r\nimport {\r\n  GEOCODER_API_BASE_URL as baseUrl,\r\n  GEOCODER_API_KEY as key,\r\n} from \"../../static\";\r\n\r\nimport { handleAsync } from \"../../utils\";\r\n\r\nconst defaultGeodata = Object.freeze({\r\n  locality: \"Warsaw\",\r\n  country: \"Poland\",\r\n  region: \"Mazovia\",\r\n  coords: { lat: 52.229676, lon: 21.012229 },\r\n});\r\n\r\nconst config = { baseUrl, key };\r\n\r\nexport class GeocodeApi {\r\n  baseUrl = \"\";\r\n  key = \"\";\r\n\r\n  constructor({ baseUrl, key } = config) {\r\n    this.baseUrl = baseUrl ?? this.baseUrl;\r\n    this.key = key ?? this.key;\r\n  }\r\n\r\n  async getGeoData({ lat, lon }) {\r\n    const params = { access_key: this.key, query: `${lat},${lon}` };\r\n    const response = await handleAsync(\r\n      axios.get(`${this.baseUrl}/reverse`, { params })\r\n    );\r\n\r\n    const [geodata] = response?.data?.data || [defaultGeodata];\r\n    return geodata;\r\n  }\r\n}\r\n\r\nexport default new GeocodeApi();\r\n","import React from \"react\";\r\nimport CityWeatherStore from \"./CityWeatherStore\";\r\nimport CountryCitiesStore from \"./CountryCitiesStore\";\r\nimport SupportedCountriesStore from \"./SupportedCountriesStore\";\r\nimport GeoDataStore from \"./GeoDataStore\";\r\nimport weatherApi from \"../services/WeatherService/api\";\r\nimport geocodeApi from \"../services/GeocodeService/api\";\r\n\r\nexport const supportedCountriesStore = new SupportedCountriesStore(weatherApi);\r\nexport const geoDataStore = new GeoDataStore(geocodeApi);\r\nexport const countryCitiesStore = new CountryCitiesStore(weatherApi);\r\nexport const cityWeatherStore = new CityWeatherStore({\r\n  geoData: geoDataStore,\r\n  cities: countryCitiesStore,\r\n  api: weatherApi,\r\n});\r\n\r\nclass RootStore {\r\n  constructor({\r\n    countryCitiesStore,\r\n    cityWeatherStore,\r\n    supportedCountriesStore,\r\n    geoDataStore,\r\n  } = {}) {\r\n    this.cities = countryCitiesStore;\r\n    this.cityWeather = cityWeatherStore;\r\n    this.countries = supportedCountriesStore;\r\n    this.localization = geoDataStore;\r\n  }\r\n}\r\n\r\nexport const store = new RootStore({\r\n  countryCitiesStore,\r\n  cityWeatherStore,\r\n  supportedCountriesStore,\r\n  geoDataStore,\r\n});\r\n\r\nexport const storeContext = React.createContext();\r\n\r\nexport const StoreProvider = ({ children }) => (\r\n  <storeContext.Provider value={store}>{children}</storeContext.Provider>\r\n);\r\n","import { useMemo } from \"react\";\r\nimport humidity from \"../static/icons/humidity.svg\";\r\nimport wind from \"../static/icons/windy.svg\";\r\nimport pollution from \"../static/icons/pollution.svg\";\r\nimport pin from \"../static/icons/pin.svg\";\r\nimport pressure from \"../static/icons/pressure.svg\";\r\n\r\nexport default function useIcons(weatherIconCode, temperature) {\r\n  const icons = useMemo(\r\n    () =>\r\n      Object.freeze({\r\n        weather: loadIconPath(weatherIconCode),\r\n        temperature: loadIconPath(getTemperatureIconCode(temperature)),\r\n        humidity,\r\n        wind,\r\n        pollution,\r\n        pin,\r\n        pressure,\r\n      }),\r\n    [weatherIconCode, temperature]\r\n  );\r\n\r\n  return icons;\r\n}\r\n\r\nfunction loadIconPath(iconName) {\r\n  return iconName && require(`../static/icons/${iconName}.svg`).default;\r\n}\r\n\r\nfunction getTemperatureIconCode(temperature) {\r\n  return temperature < 0 ? \"cold\" : temperature < 20 ? \"warm\" : \"hot\";\r\n}\r\n","import { useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { storeContext } from \"../../models\";\r\nimport { isFunction } from \"../../utils\";\r\nimport useIcons from \"../../hooks/useIcons\";\r\nimport { CircularProgress, makeStyles, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: 160,\r\n    padding: \"16px 42px 52px\",\r\n    margin: \"60px 0\",\r\n  },\r\n});\r\n\r\nfunction LocalizationWeather({ children }) {\r\n  const { cityWeather } = useContext(storeContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    weather: { ic: iconCode, tp: temperature },\r\n  } = cityWeather?.weatherData?.current || { weather: {} };\r\n\r\n  const icons = useIcons(iconCode, temperature);\r\n\r\n  return (\r\n    <>\r\n      {isFunction(children) && (\r\n        <Paper className={classes.wrapper}>\r\n          {cityWeather.isLoaded ? (\r\n            children({ ...cityWeather, icons })\r\n          ) : (\r\n            <CircularProgress />\r\n          )}\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(LocalizationWeather);\r\n","import { useContext, useState, useCallback, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { storeContext } from \"../../models\";\r\nimport { isFunction } from \"../../utils\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst FILTER_TIMEOUT = 300;\r\n\r\nfunction WithSearch({ renderInput, children }) {\r\n  const { cities, countries } = useContext(storeContext);\r\n  const history = useHistory();\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const [shouldDisplay, setShouldFilter] = useState(false);\r\n\r\n  const setCountryFilter = useCallback(\r\n    _filterBuilder(filter(countries.setFilter), FILTER_TIMEOUT),\r\n    []\r\n  );\r\n\r\n  const setCitiesFilter = useCallback(\r\n    _filterBuilder(filter(cities.setFilter), FILTER_TIMEOUT),\r\n    []\r\n  );\r\n\r\n  const handleInputChange = (e) => setInput(e.target.value);\r\n\r\n  const goToCityView = ({ city, state, country, id }) => () =>\r\n    history.push(`/city/${country}/${state}/${city}?cityId=${id}`);\r\n\r\n  const goToCountryView = (country) => () =>\r\n    history.push(`/country/${country}`, { toTopInMount: true });\r\n\r\n  useEffect(() => {\r\n    setCountryFilter(input);\r\n    setCitiesFilter(input);\r\n  }, [input]);\r\n\r\n  function filter(setFilter) {\r\n    return (input) => {\r\n      setShouldFilter(!!input?.length);\r\n      setFilter(input);\r\n    };\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <form noValidate autoComplete=\"off\">\r\n        {isFunction(renderInput) && renderInput({ input, handleInputChange })}\r\n      </form>\r\n      {isFunction(children) &&\r\n        children({\r\n          countries: countries.filtered,\r\n          cities: cities.filtered,\r\n          currentCountry: cities.currentCountry,\r\n          goToCountryView,\r\n          goToCityView,\r\n          shouldDisplay,\r\n        })}\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction _filterBuilder(setFilter, timeout) {\r\n  let timeoutId;\r\n  return (input) => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => {\r\n      setFilter(input);\r\n    }, timeout);\r\n  };\r\n}\r\n\r\nexport default observer(WithSearch);\r\n","import { useContext, useCallback } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { storeContext } from \"../../models\";\r\nimport {\r\n  FormControl,\r\n  makeStyles,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    width: 640,\r\n    maxWidth: \"90vw\",\r\n  },\r\n  wrapper: {\r\n    margin: \"16px 0\",\r\n  },\r\n});\r\n\r\nfunction SelectCountry() {\r\n  const { countries, cities, localization } = useContext(storeContext);\r\n  const setCountry = useCallback(\r\n    (e) => cities.fetchCitiesForCountry(e.target.value, true),\r\n    [cities]\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  const currentCountry = cities.currentCountry ?? localization.country;\r\n\r\n  return (\r\n    <Box className={classes.wrapper}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={setCountry}\r\n          value={currentCountry}\r\n        >\r\n          {countries.sorted.map((country) => (\r\n            <MenuItem key={country} value={country}>\r\n              {country}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default observer(SelectCountry);\r\n","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { storeContext } from \"../../models\";\r\nimport { CircularProgress, makeStyles, Box } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: \"16px 0\",\r\n  },\r\n});\r\n\r\nfunction GoToCurrentCountry() {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    cities: { currentCountry, isLoaded },\r\n    localization: { region },\r\n  } = useContext(storeContext) || { cities: {} };\r\n  const country = currentCountry ?? region;\r\n  return (\r\n    <Box className={classes.wrapper}>\r\n      {isLoaded ? (\r\n        <Link\r\n          to={{ pathname: `country/${country}`, state: { toTopInMount: true } }}\r\n        >\r\n          All cities for {country}\r\n        </Link>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default observer(GoToCurrentCountry);\r\n","import { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { matchPrefix } from \"../../utils\";\r\n\r\nexport default function Clock() {\r\n  const [time, setTime] = useState({});\r\n  const intervalIdRef = useRef();\r\n\r\n  useEffect(() => {\r\n    handleTick();\r\n    intervalIdRef.current = setInterval(handleTick, 1000);\r\n    return () => clearInterval(intervalIdRef.current);\r\n  }, []);\r\n\r\n  const matchZeroPrefix = useCallback(\r\n    matchPrefix(0)((value) => Number(value) < 10),\r\n    []\r\n  );\r\n\r\n  function handleTick() {\r\n    const now = new Date();\r\n    const currentTime = {\r\n      hours: matchZeroPrefix(now.getHours()),\r\n      minutes: matchZeroPrefix(now.getMinutes()),\r\n      seconds: matchZeroPrefix(now.getSeconds()),\r\n    };\r\n    setTime(currentTime);\r\n  }\r\n\r\n  const { hours, minutes, seconds } = time;\r\n\r\n  return (\r\n    <Typography variant=\"h5\">\r\n      <span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\r\n    </Typography>\r\n  );\r\n}\r\n","import { Grid, makeStyles, Typography, Box } from \"@material-ui/core\";\r\nimport Clock from \"../../components/Clock\";\r\n\r\nconst useStyles = makeStyles({\r\n  localizationIcon: {\r\n    position: \"absolute\",\r\n    top: -20,\r\n    right: -20,\r\n    width: 38,\r\n  },\r\n  data: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: \"0 32px 24px\",\r\n  },\r\n  dataWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  rowWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    padding: \"6px 56px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    wrap: \"wrap\",\r\n  },\r\n  icon: {\r\n    height: 42,\r\n    paddingRight: 6,\r\n  },\r\n  weatherIcon: {\r\n    height: \"100%\",\r\n    display: \"block\",\r\n  },\r\n  weatherIconWrapper: {\r\n    height: 180,\r\n  },\r\n  wrapper: {\r\n    position: \"relative\",\r\n    minHeight: 160,\r\n    padding: \"16px 42px 52px\",\r\n    margin: \"60px 0\",\r\n  },\r\n});\r\n\r\nexport default function LocalizationWidget({ weatherData, geoData, icons }) {\r\n  const classess = useStyles();\r\n  return (\r\n    <Box>\r\n      <Typography align=\"center\" variant=\"h5\" paragraph>\r\n        Your localization\r\n      </Typography>\r\n      <Grid container alignItems=\"center\" justify=\"flex-start\" spacing={2}>\r\n        <Grid item className={classess.weatherIconWrapper}>\r\n          <img\r\n            className={classess.weatherIcon}\r\n            alt=\"current weather icon\"\r\n            src={icons?.weather}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography color=\"primary\" variant=\"h1\">\r\n            {weatherData?.current?.weather?.tp} &deg;C\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item className={classess.weatherIconWrapper}>\r\n          <Box className={classess.rowWrapper}>\r\n            <Box className={classess.dataWrapper}>\r\n              <Box className={classess.data}>\r\n                <img\r\n                  className={classess.icon}\r\n                  alt=\"humidity icon\"\r\n                  src={icons?.humidity}\r\n                />\r\n                <Box className={classess.dataWrapper}>\r\n                  <Typography variant=\"subtitle1\">Humidity</Typography>\r\n                  <Typography variant=\"h5\">\r\n                    {weatherData?.current?.weather?.hu}%\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box className={classess.data}>\r\n                <img\r\n                  className={classess.icon}\r\n                  alt=\"humidity icon\"\r\n                  src={icons?.pressure}\r\n                />\r\n                <Box className={classess.dataWrapper}>\r\n                  <Typography variant=\"subtitle1\">Pressure</Typography>\r\n                  <Typography variant=\"h5\">\r\n                    {weatherData?.current?.weather?.pr} hPa\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            <Box className={classess.dataWrapper}>\r\n              <Box className={classess.data}>\r\n                <img\r\n                  className={classess.icon}\r\n                  alt=\"wind speed icon\"\r\n                  src={icons?.wind}\r\n                />\r\n                <Box className={classess.dataWrapper}>\r\n                  <Typography variant=\"subtitle1\">Wind speed</Typography>\r\n                  <Typography variant=\"h5\">\r\n                    {weatherData?.current?.weather?.ws} m/s\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              <Box className={classess.data}>\r\n                <img\r\n                  className={classess.icon}\r\n                  alt=\"humidity icon\"\r\n                  src={icons?.pollution}\r\n                />\r\n                <Box className={classess.dataWrapper}>\r\n                  <Typography variant=\"subtitle1\">Pollution</Typography>\r\n                  <Typography variant=\"h5\">\r\n                    {weatherData?.current?.pollution?.aqius} AQI\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item className={classess.weatherIconWrapper}>\r\n          <Typography variant=\"overline\">{weatherData.country}</Typography>\r\n          <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n            {weatherData.state}\r\n          </Typography>\r\n          <Typography color=\"secondary\" paragraph variant=\"h3\">\r\n            {weatherData.city}\r\n          </Typography>\r\n          <Clock />\r\n        </Grid>\r\n      </Grid>\r\n      <img\r\n        className={classess.localizationIcon}\r\n        alt=\"localization icon\"\r\n        src={icons?.pin}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { useCallback } from \"react\";\r\nimport LocalizationWeather from \"../../containers/LocalizationWeather\";\r\nimport Search from \"../../components/Search\";\r\nimport SelectCountry from \"../../components/SelectCountry\";\r\nimport GoToCurrentCountry from \"../../components/GoToCurrentCountry\";\r\nimport LocalizationWidget from \"./LocalizationWidget\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  search: {\r\n    width: 640,\r\n    maxWidth: \"90vw\",\r\n    margin: \"46px 0 32px\",\r\n  },\r\n  list: {\r\n    margin: \"32px 0\",\r\n  },\r\n  container: {\r\n    margin: \"20px 0\",\r\n  },\r\n  wrapper: {\r\n    position: \"absolute\",\r\n    transform: \"translateY(-30px)\",\r\n    overflowY: \"scroll\",\r\n    width: 580,\r\n    maxWidth: \"90vw\",\r\n    height: 320,\r\n    maxHeight: \"90vh\",\r\n    backgroundColor: \"#ffffff\",\r\n    padding: 32,\r\n    zIndex: 2,\r\n  },\r\n  listItem: { cursor: \"pointer\" },\r\n});\r\n\r\nexport default function MainView() {\r\n  const classes = useStyles();\r\n\r\n  const renderInput = useCallback(\r\n    ({ input, handleInputChange }) => (\r\n      <TextField\r\n        className={classes.search}\r\n        value={input}\r\n        onChange={handleInputChange}\r\n        id=\"outlined-basic\"\r\n        label=\"search\"\r\n        placeholder=\"City or country...\"\r\n        variant=\"outlined\"\r\n      />\r\n    ),\r\n    []\r\n  );\r\n\r\n  const renderCountries = useCallback(\r\n    (countries, currentCountry, goToCountryView) => (\r\n      <Box className={classes.list}>\r\n        <Typography variant=\"h5\">Countries</Typography>\r\n\r\n        <List>\r\n          {countries?.map((country) => (\r\n            <ListItem\r\n              className={classes.listItem}\r\n              key={country}\r\n              selected={currentCountry === country}\r\n              onClick={goToCountryView(country)}\r\n            >\r\n              {country}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    ),\r\n    []\r\n  );\r\n\r\n  const renderCities = useCallback(\r\n    (cities, currentCountry, goToCityView) => (\r\n      <Box className={classes.list}>\r\n        <Typography variant=\"h5\">Cities for {currentCountry}</Typography>\r\n        <List>\r\n          {cities?.map(({ city, state, country, id }) => (\r\n            <ListItem\r\n              className={classes.listItem}\r\n              key={id}\r\n              onClick={goToCityView({ city, state, country, id })}\r\n            >\r\n              <Box>\r\n                <Typography variant=\"caption\">{state}</Typography>\r\n                <Typography variant=\"h6\">{city} </Typography>\r\n              </Box>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    ),\r\n    []\r\n  );\r\n\r\n  const renderContent = ({\r\n    countries,\r\n    cities,\r\n    goToCityView,\r\n    goToCountryView,\r\n    shouldDisplay,\r\n    currentCountry,\r\n  }) => (\r\n    <>\r\n      {shouldDisplay && (\r\n        <Paper className={classes.wrapper}>\r\n          {renderCities(cities, currentCountry, goToCityView)}\r\n          <Divider />\r\n          {renderCountries(countries, currentCountry, goToCountryView)}\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Typography variant=\"h5\">Find weather</Typography>\r\n        <Search renderInput={renderInput}>{renderContent}</Search>\r\n        <SelectCountry />\r\n        <GoToCurrentCountry />\r\n      </Grid>\r\n      <LocalizationWeather>\r\n        {(props) => <LocalizationWidget {...props} />}\r\n      </LocalizationWeather>\r\n    </Box>\r\n  );\r\n}\r\n","import useIcons from \"../../hooks/useIcons\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: 60,\r\n    right: 60,\r\n  },\r\n  data: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    margin: \"18px 12px\",\r\n  },\r\n  card: {\r\n    padding: 24,\r\n    margin: \"32px 0\",\r\n    width: 320,\r\n    cursor: \"pointer\",\r\n  },\r\n  icon: {\r\n    width: \"50%\",\r\n    height: 60,\r\n    backgroundSize: \"contain\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n  },\r\n  container: { margin: \"24px 0\" },\r\n  wrapper: {\r\n    minHeight: \"90vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n});\r\n\r\nexport default function City({ setRef, isLast, onClick, data }) {\r\n  const {\r\n    city,\r\n    state,\r\n    current: { weather, pollution },\r\n  } = data || { current: {} };\r\n\r\n  const classes = useStyles();\r\n\r\n  const icons = useIcons(weather?.ic, weather?.tp);\r\n\r\n  return (\r\n    <Card className={classes.card} ref={setRef(isLast)} onClick={onClick}>\r\n      <Typography color=\"textSecondary\" align=\"center\" variant=\"subtitle2\">\r\n        {state}\r\n      </Typography>\r\n      <Typography align=\"center\" paragraph variant=\"h4\">\r\n        {city}\r\n      </Typography>\r\n      <Box className={classes.data}>\r\n        <CardMedia className={classes.icon} image={icons?.weather} />\r\n        <Typography color=\"textSecondary\" variant=\"h4\">\r\n          {weather?.tp} &deg;C{\" \"}\r\n        </Typography>\r\n      </Box>\r\n      <Box className={classes.data}>\r\n        <CardMedia className={classes.icon} image={icons?.pollution} />\r\n        <Typography color=\"textSecondary\" variant=\"h4\">\r\n          {pollution?.aqius} AQI{\" \"}\r\n        </Typography>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { storeContext } from \"../../models\";\r\nimport useLazyLoad from \"../../hooks/useLazyLoad\";\r\nimport City from \"./City\";\r\nimport UpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  Box,\r\n  Fab,\r\n  CircularProgress,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport { HomeSharp } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: 60,\r\n    right: 60,\r\n  },\r\n  container: { margin: \"24px 0\" },\r\n  wrapper: {\r\n    minHeight: \"90vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    position: \"fixed\",\r\n    zIndex: 2,\r\n    left: 60,\r\n    top: 60,\r\n  },\r\n});\r\n\r\nfunction CountryView() {\r\n  const { cities } = useContext(storeContext);\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n\r\n  const shouldFetchCities = cities.currentCountry !== params.country;\r\n\r\n  const setRef = useLazyLoad(cities.loadCitiesWeather.bind(cities), [\r\n    cities.loaded.length,\r\n    cities,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    loadCities(shouldFetchCities, params.country);\r\n  }, [shouldFetchCities, params.country, cities]);\r\n\r\n  useEffect(() => {\r\n    !!location.state?.toTopInMount && scrollToTop();\r\n  }, [location.state]);\r\n\r\n  const goToCityView = ({ country, state, city, id }) => () =>\r\n    history.push(`/city/${country}/${state}/${city}?cityId=${id}`);\r\n\r\n  const scrollToTop = () => window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n\r\n  async function loadCities(shouldFetchCities, country) {\r\n    shouldFetchCities && (await cities.fetchCitiesForCountry(country, true));\r\n    cities.loadCitiesWeather();\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <IconButton\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => history.push(\"/\")}\r\n      >\r\n        <HomeSharp fontSize=\"large\" />\r\n      </IconButton>\r\n      <Typography variant=\"h2\" align=\"center\">\r\n        {params?.country}\r\n      </Typography>\r\n      <Box className={classes.wrapper}>\r\n        {shouldFetchCities ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Box>\r\n            {!!cities.cities.length ? (\r\n              cities.loaded.map((data, index, array) => (\r\n                <City\r\n                  key={data?.id}\r\n                  setRef={setRef}\r\n                  isLast={index === array.length - 1}\r\n                  onClick={goToCityView({\r\n                    city: data?.city,\r\n                    state: data?.state,\r\n                    country: data?.country,\r\n                    id: data?.id,\r\n                  })}\r\n                  data={data}\r\n                />\r\n              ))\r\n            ) : (\r\n              <>\r\n                {!cities.isFetching && (\r\n                  <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\">\r\n                    There are no supported cities for {params.country}\r\n                  </Typography>\r\n                )}\r\n              </>\r\n            )}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      <Fab color=\"primary\" className={classes.fab} onClick={scrollToTop}>\r\n        <UpIcon />\r\n      </Fab>\r\n      {cities.isFetching && <CircularProgress />}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default observer(CountryView);\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport default function useLazyLoad(load, deps = []) {\r\n  const intersectionObserverRef = useRef();\r\n  const lastLoadedItemRef = useRef();\r\n\r\n  useEffect(\r\n    () => {\r\n      intersectionObserverRef.current?.disconnect?.();\r\n      intersectionObserverRef.current = new IntersectionObserver(([entry]) => {\r\n        entry.isIntersecting && load();\r\n      });\r\n      lastLoadedItemRef.current &&\r\n        intersectionObserverRef.current?.observe?.(lastLoadedItemRef.current);\r\n      return () => intersectionObserverRef.current?.disconnect?.();\r\n    },\r\n    Array.isArray(deps) ? deps : []\r\n  );\r\n\r\n  const setRef = (isLast) => (node) => {\r\n    if (isLast) {\r\n      lastLoadedItemRef.current = node;\r\n    }\r\n  };\r\n\r\n  return setRef;\r\n}\r\n","import React, { useContext, useEffect, useState, useMemo } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { storeContext } from \"../../models\";\r\nimport { getSearchParams } from \"../../utils\";\r\nimport useIcons from \"../../hooks/useIcons\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport L from \"leaflet\";\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\nimport Clock from \"../../components/Clock\";\r\nimport {\r\n  CircularProgress,\r\n  Typography,\r\n  Box,\r\n  Card,\r\n  makeStyles,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ArrowBackSharp } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    margin: \"24px 0\",\r\n    padding: 48,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n  },\r\n  wrapper: {\r\n    width: \"100%\",\r\n  },\r\n  weatherWrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    width: \"100%\",\r\n  },\r\n  weatherIcon: {\r\n    height: 180,\r\n    display: \"block\",\r\n    paddingRight: 32,\r\n  },\r\n  data: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    margin: \"24px 0\",\r\n  },\r\n  back: {\r\n    position: \"fixed\",\r\n    zIndex: 2,\r\n    left: 60,\r\n    top: 60,\r\n  },\r\n  icon: {\r\n    paddingRight: 12,\r\n    display: \"block\",\r\n    height: 48,\r\n  },\r\n  temperatureIcon: {\r\n    display: \"block\",\r\n    height: 80,\r\n  },\r\n  temperature: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  map: { height: 360, width: 580 },\r\n  mapContainer: {\r\n    margin: \"48px 0\",\r\n  },\r\n  secondWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n  },\r\n  temp: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n});\r\n\r\nconst DefaultIcon = L.icon({\r\n  iconUrl: icon,\r\n  shadowUrl: iconShadow,\r\n  iconAnchor: [17, 46],\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nfunction CityView() {\r\n  const [didMount, setDidMount] = useState(false);\r\n  const { cities } = useContext(storeContext);\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    city,\r\n    country,\r\n    state,\r\n    location: { coordinates },\r\n    current: { weather, pollution },\r\n  } = cities.currentCity || { current: {}, location: {} };\r\n\r\n  const icons = useIcons(weather?.ic, weather?.tp);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const params = useParams();\r\n\r\n  const { cityId } = useMemo(() => getSearchParams(location?.search), [\r\n    location?.search,\r\n  ]);\r\n\r\n  const isLoaded = useMemo(() => didMount && cities.isLoaded, [\r\n    didMount,\r\n    cities.isLoaded,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    loadData(cityId, params.country, cities.currentCountry);\r\n  }, [cityId, params.country, cities.currentCountry]);\r\n\r\n  useEffect(() => {\r\n    setDidMount(true);\r\n  }, []);\r\n\r\n  async function loadData(cityId, country, currentCountry) {\r\n    country !== currentCountry &&\r\n      (await Promise.resolve(cities.fetchCitiesForCountry(country, true)));\r\n    cities.loadCityWeather(Number(cityId));\r\n  }\r\n\r\n  const [lat, lon] = Array.isArray(coordinates) ? coordinates : [];\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        color=\"primary\"\r\n        className={classes.back}\r\n        onClick={() => history.goBack()}\r\n      >\r\n        <ArrowBackSharp fontSize=\"large\" />\r\n      </IconButton>\r\n      <Card className={classes.container}>\r\n        {!isLoaded ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Box className={classes.wrapper}>\r\n            <Box className={classes.weatherWrapper}>\r\n              <img\r\n                className={classes.weatherIcon}\r\n                alt=\"weather icon\"\r\n                src={icons?.weather}\r\n              />\r\n              <Box>\r\n                <Typography align=\"center\" paragraph variant=\"h2\">\r\n                  {city}\r\n                </Typography>\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"subtitle1\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {state}\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"subtitle2\">\r\n                  {country}\r\n                </Typography>\r\n              </Box>\r\n              <Box className={classes.temp}>\r\n                <Box className={classes.temperature}>\r\n                  <img\r\n                    className={classes.temperatureIcon}\r\n                    alt=\"temperature icon\"\r\n                    src={icons?.temperature}\r\n                  />\r\n                  <Typography color=\"primary\" variant=\"h2\">\r\n                    {weather?.tp} &deg;C\r\n                  </Typography>\r\n                </Box>\r\n                <Clock />\r\n              </Box>\r\n            </Box>\r\n            <Box className={classes.secondWrapper}>\r\n              {coordinates && (\r\n                <Box className={classes.mapContainer}>\r\n                  <MapContainer\r\n                    className={classes.map}\r\n                    center={[lon, lat]}\r\n                    zoom={6}\r\n                    scrollWheelZoom={false}\r\n                  >\r\n                    <TileLayer\r\n                      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    <Marker position={[lon, lat]}>\r\n                      <Popup>\r\n                        A pretty CSS3 popup. <br /> Easily customizable.\r\n                      </Popup>\r\n                    </Marker>\r\n                  </MapContainer>\r\n                </Box>\r\n              )}\r\n              <Box>\r\n                <Box className={classes.data}>\r\n                  <img\r\n                    className={classes.icon}\r\n                    alt=\"air pollution icon\"\r\n                    src={icons?.pollution}\r\n                  />\r\n                  <Typography variant=\"h5\" color=\"textSecondary\">\r\n                    {pollution?.aqius} AQI\r\n                  </Typography>\r\n                </Box>\r\n                <Box className={classes.data}>\r\n                  <img\r\n                    className={classes.icon}\r\n                    alt=\"humidity icon\"\r\n                    src={icons?.humidity}\r\n                  />\r\n                  <Typography variant=\"h5\" color=\"textSecondary\">\r\n                    {weather?.hu} %\r\n                  </Typography>\r\n                </Box>\r\n                <Box className={classes.data}>\r\n                  <img\r\n                    className={classes.icon}\r\n                    alt=\"air pressure icon\"\r\n                    src={icons?.pressure}\r\n                  />\r\n                  <Typography variant=\"h5\" color=\"textSecondary\">\r\n                    {weather?.pr} hPa\r\n                  </Typography>\r\n                </Box>\r\n                <Box className={classes.data}>\r\n                  <img\r\n                    className={classes.icon}\r\n                    alt=\"wind speed icon\"\r\n                    src={icons?.wind}\r\n                  />\r\n                  <Typography variant=\"h5\" color=\"textSecondary\">\r\n                    {weather?.ws} m/s\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(CityView);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function NotFoundView() {\r\n  return <Redirect to=\"/\" />;\r\n}\r\n","import { useEffect, useContext, useState } from \"react\";\r\nimport usePrevious from \"../hooks/usePrevious\";\r\n\r\nexport default function usePreLoad(storeContext) {\r\n  const store = useContext(storeContext);\r\n\r\n  const [isLoaded, setIsLoaded] = useState(\r\n    store.localization.isLoaded &&\r\n      store.countries.isLoaded &&\r\n      store.cities.isLoaded &&\r\n      store.cityWeather.isLoaded\r\n  );\r\n\r\n  const prevCoordinates = usePrevious(store.localization.coordinates);\r\n\r\n  useEffect(() => {\r\n    if (!isLoaded || prevCoordinates !== store.localization.coordinates) {\r\n      loadData({ ...store });\r\n      setIsLoaded(true);\r\n    }\r\n  }, [isLoaded, store.localization.coordinates]);\r\n\r\n  return isLoaded;\r\n}\r\nasync function loadData({ localization, countries, cityWeather, cities }) {\r\n  await Promise.resolve(localization?.fetchGeoData(true));\r\n  await Promise.resolve(countries?.fetchCountries());\r\n  await Promise.resolve(cities?.fetchCitiesForCountry(localization?.country));\r\n\r\n  const cityId = cities?.cities.find(\r\n    (city) =>\r\n      city?.city === localization?.locality &&\r\n      city?.state === localization?.region\r\n  )?.id;\r\n\r\n  await Promise.resolve(cityWeather?.fetchLocalWeatherData(cityId));\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport default function usePrevious(value) {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n\r\n  return ref.current;\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { storeContext } from \"../../models\";\r\nimport usePreLoad from \"../../hooks/usePreLoad\";\r\n\r\nfunction MainContainer({ children }) {\r\n  const isLoaded = usePreLoad(storeContext);\r\n  return <>{isLoaded ? <div>{children}</div> : <div>loading...</div>}</>;\r\n}\r\n\r\nexport default observer(MainContainer);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport MainView from \"../../views/MainView\";\r\nimport CountryView from \"../../views/CountryView\";\r\nimport CityView from \"../../views/CityView\";\r\nimport NotFoundView from \"../../views/NotFoundView\";\r\nimport MainContainer from \"../../containers/MainContainer\";\r\n\r\nexport default function MainRouter({ children }) {\r\n  return (\r\n    <Router>\r\n      <MainContainer>\r\n        {children}\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MainView} />\r\n          <Route path=\"/country/:country\" component={CountryView} />\r\n          <Route path=\"/city/:country/:state/:city\" component={CityView} />\r\n          <Route component={NotFoundView} />\r\n        </Switch>\r\n      </MainContainer>\r\n    </Router>\r\n  );\r\n}\r\n","import MainRouter from \"./routers/MainRouter\";\nimport { StoreProvider } from \"./models\";\nimport { Container } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <Container className=\"App\">\n        <MainRouter />\n      </Container>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/humidity.dc71ee9b.svg\";","export default __webpack_public_path__ + \"static/media/windy.3f48d90e.svg\";","export default __webpack_public_path__ + \"static/media/pollution.4b652c47.svg\";","export default __webpack_public_path__ + \"static/media/pin.5a76726c.svg\";","export default __webpack_public_path__ + \"static/media/pressure.fbec89c3.svg\";"],"sourceRoot":""}